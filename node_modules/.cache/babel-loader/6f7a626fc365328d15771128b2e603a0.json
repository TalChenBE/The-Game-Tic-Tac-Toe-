{"ast":null,"code":"import \"./GridGame.css\";\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    let el = ``;\n    let typePlayer = this.getAttribute(\"name\");\n    let player1 = this.getAttribute(\"player1\"),\n        player2 = this.getAttribute(\"player2\");\n    const sizeBord = this.getAttribute(\"sizeBord\");\n    console.log(\"Game sizeBord:\", sizeBord);\n\n    for (let i = 0; i < sizeBord; i++) {\n      // el += `<place-component id=\"placeBtn\" name=${i} typePlayer=${typePlayer} onClickPlace=\"check\"></place-component>`;\n      el += `<place-component id=\"placeBtn\" name=${i} sizeBord=${sizeBord} typePlayer=${typePlayer} player1=${player1} player2=${player2} onClickPlace=\"check\"></place-component>`;\n    }\n\n    this.innerHTML += `<div class=\"body\"> ${el} </div>`;\n  }\n\n}\n\nwindow.customElements.define(\"grid-game\", GridGame); // export { sizeBord };\n\nexport default GridGame;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/components/board/GridGame.js"],"names":["GridGame","HTMLElement","constructor","connectedCallback","el","typePlayer","getAttribute","player1","player2","sizeBord","console","log","i","innerHTML","window","customElements","define"],"mappings":"AAAA,OAAO,gBAAP;;AAEA,MAAMA,QAAN,SAAuBC,WAAvB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,EAAE,GAAI,EAAV;AACA,QAAIC,UAAU,GAAG,KAAKC,YAAL,CAAkB,MAAlB,CAAjB;AACA,QAAIC,OAAO,GAAG,KAAKD,YAAL,CAAkB,SAAlB,CAAd;AAAA,QACEE,OAAO,GAAG,KAAKF,YAAL,CAAkB,SAAlB,CADZ;AAEA,UAAMG,QAAQ,GAAG,KAAKH,YAAL,CAAkB,UAAlB,CAAjB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAA9B;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAApB,EAA8BG,CAAC,EAA/B,EAAmC;AACjC;AACAR,MAAAA,EAAE,IAAK,uCAAsCQ,CAAE,aAAYH,QAAS,eAAcJ,UAAW,YAAWE,OAAQ,YAAWC,OAAQ,0CAAnI;AACD;;AACD,SAAKK,SAAL,IAAmB,sBAAqBT,EAAG,SAA3C;AACD;;AAjBgC;;AAmBnCU,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,WAA7B,EAA0ChB,QAA1C,E,CAEA;;AACA,eAAeA,QAAf","sourcesContent":["import \"./GridGame.css\";\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    let el = ``;\n    let typePlayer = this.getAttribute(\"name\");\n    let player1 = this.getAttribute(\"player1\"),\n      player2 = this.getAttribute(\"player2\");\n    const sizeBord = this.getAttribute(\"sizeBord\");\n    console.log(\"Game sizeBord:\", sizeBord);\n    for (let i = 0; i < sizeBord; i++) {\n      // el += `<place-component id=\"placeBtn\" name=${i} typePlayer=${typePlayer} onClickPlace=\"check\"></place-component>`;\n      el += `<place-component id=\"placeBtn\" name=${i} sizeBord=${sizeBord} typePlayer=${typePlayer} player1=${player1} player2=${player2} onClickPlace=\"check\"></place-component>`;\n    }\n    this.innerHTML += `<div class=\"body\"> ${el} </div>`;\n  }\n}\nwindow.customElements.define(\"grid-game\", GridGame);\n\n// export { sizeBord };\nexport default GridGame;\n"]},"metadata":{},"sourceType":"module"}