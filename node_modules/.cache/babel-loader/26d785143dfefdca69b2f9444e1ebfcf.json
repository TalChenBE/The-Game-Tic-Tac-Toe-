{"ast":null,"code":"import Place from \"./Place\";\nimport * as getTypePlayer from \"./App\";\nimport \"./GridBord.css\";\nconst sizeBord = 9;\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<div class=\"body\">\n  <Place name={i} player={typePlayer} />;\n  \n</div>\n`;\n\nclass BordGrid extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({\n      mode: \"open\"\n    });\n    var typePlayer = getTypePlayer.typePlayer;\n\n    for (let i = 0; i < sizeBord; i++) this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n}\n\nwindow.customElements.define(\"bord-template\", BordGrid);\nexport default BordGrid;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/game/Tic-Tok-Toe/src/BordGrid.js"],"names":["Place","getTypePlayer","sizeBord","template","document","createElement","innerHTML","BordGrid","HTMLElement","constructor","attachShadow","mode","typePlayer","i","shadowRoot","appendChild","content","cloneNode","window","customElements","define"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAO,KAAKC,aAAZ,MAA+B,OAA/B;AACA,OAAO,gBAAP;AAEA,MAAMC,QAAQ,GAAG,CAAjB;AACA,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;AACAF,QAAQ,CAACG,SAAT,GAAsB;AACtB;AACA;AACA;AACA;AACA,CALA;;AAMA,MAAMC,QAAN,SAAuBC,WAAvB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,YAAL,CAAkB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAlB;AACA,QAAIC,UAAU,GAAGX,aAAa,CAACW,UAA/B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,QAApB,EAA8BW,CAAC,EAA/B,EACE,KAAKC,UAAL,CAAgBC,WAAhB,CAA4BZ,QAAQ,CAACa,OAAT,CAAiBC,SAAjB,CAA2B,IAA3B,CAA5B;AACH;;AAPgC;;AASnCC,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,eAA7B,EAA8Cb,QAA9C;AAEA,eAAeA,QAAf","sourcesContent":["import Place from \"./Place\";\nimport * as getTypePlayer from \"./App\";\nimport \"./GridBord.css\";\n\nconst sizeBord = 9;\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<div class=\"body\">\n  <Place name={i} player={typePlayer} />;\n  \n</div>\n`;\nclass BordGrid extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    var typePlayer = getTypePlayer.typePlayer;\n    for (let i = 0; i < sizeBord; i++)\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n}\nwindow.customElements.define(\"bord-template\", BordGrid);\n\nexport default BordGrid;\n"]},"metadata":{},"sourceType":"module"}