{"ast":null,"code":"import _classCallCheck from\"/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _wrapNativeSuper from\"/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";var _initBord;// import Place from \"./components/Place\";\nimport*as getBord from\"./components/Place\";import*as getPlayer from\"./App\";import PlaceWEB from\"./OnePlace\";import\"./GridGame.css\";// var typePlayer = getPlayer.namePlayer;\n// const sizeBord = getBord.sizeBord;\nvar numClicked=0;var initBord=localStorage.getItem(\"bord\");initBord=JSON.parse(initBord);var sizeBord=9;var emptyBord=[];for(var i=0;i<sizeBord;i++){emptyBord[i]=\" \";}emptyBord[sizeBord]=\"T\";var bord=(_initBord=initBord)!==null&&_initBord!==void 0?_initBord:emptyBord;var typePlayer;var GridGame=/*#__PURE__*/function(_HTMLElement){_inherits(GridGame,_HTMLElement);var _super=_createSuper(GridGame);function GridGame(){_classCallCheck(this,GridGame);return _super.call(this);}_createClass(GridGame,[{key:\"connectedCallback\",value:function connectedCallback(){var onClickPlace=this.getAttribute(\"onClickPlace\");var gridRef=this.getAttribute(\"ref\");var el=\"\";typePlayer=this.getAttribute(\"name\");for(var _i=0;_i<sizeBord;_i++){el+=\"<place-component id=\\\"placeBtn\\\" name=\".concat(_i,\" typePlayer=\").concat(typePlayer,\" onClickPlace=\\\"check\\\"></place-component>\");}this.innerHTML+=\"<div class=\\\"body\\\"> \".concat(el,\" </div>\");}// attributeChangedCallback(name, oldValue, newValue) {\n//   console.log(\"grid - typeplayer change!\" + name, oldValue, newValue);\n// }\n}]);return GridGame;}(/*#__PURE__*/_wrapNativeSuper(HTMLElement));window.customElements.define(\"grid-game\",GridGame);export default GridGame;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/GridGame.js"],"names":["getBord","getPlayer","PlaceWEB","numClicked","initBord","localStorage","getItem","JSON","parse","sizeBord","emptyBord","i","bord","typePlayer","GridGame","onClickPlace","getAttribute","gridRef","el","innerHTML","HTMLElement","window","customElements","define"],"mappings":"u3BAAA;AACA,MAAO,GAAKA,CAAAA,OAAZ,KAAyB,oBAAzB,CACA,MAAO,GAAKC,CAAAA,SAAZ,KAA2B,OAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAO,gBAAP,CAEA;AACA;AACA,GAAIC,CAAAA,UAAU,CAAG,CAAjB,CACA,GAAIC,CAAAA,QAAQ,CAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAf,CACAF,QAAQ,CAAGG,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAX,CACA,GAAMK,CAAAA,QAAQ,CAAG,CAAjB,CAEA,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,QAApB,CAA8BE,CAAC,EAA/B,EAAmCD,SAAS,CAACC,CAAD,CAAT,CAAe,GAAf,CAAnC,CACAD,SAAS,CAACD,QAAD,CAAT,CAAsB,GAAtB,CAEA,GAAMG,CAAAA,IAAI,YAAGR,QAAH,uCAAeM,SAAzB,CACA,GAAIG,CAAAA,UAAJ,C,GAEMC,CAAAA,Q,wGACJ,mBAAc,yDAEb,C,sDAED,4BAAoB,CAClB,GAAIC,CAAAA,YAAY,CAAG,KAAKC,YAAL,CAAkB,cAAlB,CAAnB,CACA,GAAIC,CAAAA,OAAO,CAAG,KAAKD,YAAL,CAAkB,KAAlB,CAAd,CACA,GAAIE,CAAAA,EAAE,GAAN,CACAL,UAAU,CAAG,KAAKG,YAAL,CAAkB,MAAlB,CAAb,CACA,IAAK,GAAIL,CAAAA,EAAC,CAAG,CAAb,CAAgBA,EAAC,CAAGF,QAApB,CAA8BE,EAAC,EAA/B,CAAmC,CACjCO,EAAE,kDAA2CP,EAA3C,wBAA2DE,UAA3D,8CAAF,CACD,CACD,KAAKM,SAAL,iCAAwCD,EAAxC,YACD,CAED;AACA;AACA;oDAlBqBE,W,GAoBvBC,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,WAA7B,CAA0CT,QAA1C,EAEA,cAAeA,CAAAA,QAAf","sourcesContent":["// import Place from \"./components/Place\";\nimport * as getBord from \"./components/Place\";\nimport * as getPlayer from \"./App\";\nimport PlaceWEB from \"./OnePlace\";\nimport \"./GridGame.css\";\n\n// var typePlayer = getPlayer.namePlayer;\n// const sizeBord = getBord.sizeBord;\nvar numClicked = 0;\nvar initBord = localStorage.getItem(\"bord\");\ninitBord = JSON.parse(initBord);\nconst sizeBord = 9;\n\nvar emptyBord = [];\nfor (let i = 0; i < sizeBord; i++) emptyBord[i] = \" \";\nemptyBord[sizeBord] = \"T\";\n\nconst bord = initBord ?? emptyBord;\nvar typePlayer;\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    var onClickPlace = this.getAttribute(\"onClickPlace\");\n    var gridRef = this.getAttribute(\"ref\");\n    let el = ``;\n    typePlayer = this.getAttribute(\"name\");\n    for (let i = 0; i < sizeBord; i++) {\n      el += `<place-component id=\"placeBtn\" name=${i} typePlayer=${typePlayer} onClickPlace=\"check\"></place-component>`;\n    }\n    this.innerHTML += `<div class=\"body\"> ${el} </div>`;\n  }\n\n  // attributeChangedCallback(name, oldValue, newValue) {\n  //   console.log(\"grid - typeplayer change!\" + name, oldValue, newValue);\n  // }\n}\nwindow.customElements.define(\"grid-game\", GridGame);\n\nexport default GridGame;\n"]},"metadata":{},"sourceType":"module"}