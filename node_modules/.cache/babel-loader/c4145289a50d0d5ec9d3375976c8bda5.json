{"ast":null,"code":"const template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<style>\n .body button{\n \t\tborder: 20px;\n     border-color: white;\n     border-radius: 5px;\n \t\t padding: 2px 2px;\n     width: 50px;\n     height: 50px; \n     margin-right: 10px;    \n     font-weight: bold;\n  }\n</style>\n  <div class=\"body\">\n    <button id=\"grid-bord\"><slot name=\"compButton\" /></button>\n  </div>\n`;\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({\n      mode: \"open\"\n    }).innerHTML = '<h1>your DOM here</h1><pre id=\"content\"></pre>'; // /  this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  connectedCallback() {}\n\n  set content(val) {\n    this._content = val; // render changes\n\n    let el = this.shadowRoot.querySelector(\"#content\");\n    el.textContent = JSON.stringify(this._content, 0, 2);\n  }\n\n  get content() {\n    return this._content;\n  } // disconnectedCallback() {\n  //   this.shadowRoot.querySelector(\"#grid-bord\").removeEventListener();\n  // }\n\n\n}\n\nwindow.customElements.define(\"grid-game\", GridGame);\nsetTimeout(() => {\n  let el = document.getElementById(\"mine\");\n  el.content = obj;\n}, 10);\nexport default GridGame;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/GridGame.js"],"names":["template","document","createElement","innerHTML","GridGame","HTMLElement","constructor","attachShadow","mode","connectedCallback","content","val","_content","el","shadowRoot","querySelector","textContent","JSON","stringify","window","customElements","define","setTimeout","getElementById","obj"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;AACAF,QAAQ,CAACG,SAAT,GAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;;AAkBA,MAAMC,QAAN,SAAuBC,WAAvB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,YAAL,CAAkB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAlB,EAAoCL,SAApC,GACE,gDADF,CAHY,CAKZ;AACD;;AACDM,EAAAA,iBAAiB,GAAG,CAAE;;AAEX,MAAPC,OAAO,CAACC,GAAD,EAAM;AACf,SAAKC,QAAL,GAAgBD,GAAhB,CADe,CAEf;;AACA,QAAIE,EAAE,GAAG,KAAKC,UAAL,CAAgBC,aAAhB,CAA8B,UAA9B,CAAT;AACAF,IAAAA,EAAE,CAACG,WAAH,GAAiBC,IAAI,CAACC,SAAL,CAAe,KAAKN,QAApB,EAA8B,CAA9B,EAAiC,CAAjC,CAAjB;AACD;;AACU,MAAPF,OAAO,GAAG;AACZ,WAAO,KAAKE,QAAZ;AACD,GAlBgC,CAoBjC;AACA;AACA;;;AAtBiC;;AAwBnCO,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,WAA7B,EAA0CjB,QAA1C;AAEAkB,UAAU,CAAC,MAAM;AACf,MAAIT,EAAE,GAAGZ,QAAQ,CAACsB,cAAT,CAAwB,MAAxB,CAAT;AACAV,EAAAA,EAAE,CAACH,OAAH,GAAac,GAAb;AACD,CAHS,EAGP,EAHO,CAAV;AAIA,eAAepB,QAAf","sourcesContent":["const template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<style>\n .body button{\n \t\tborder: 20px;\n     border-color: white;\n     border-radius: 5px;\n \t\t padding: 2px 2px;\n     width: 50px;\n     height: 50px; \n     margin-right: 10px;    \n     font-weight: bold;\n  }\n</style>\n  <div class=\"body\">\n    <button id=\"grid-bord\"><slot name=\"compButton\" /></button>\n  </div>\n`;\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n\n    this.attachShadow({ mode: \"open\" }).innerHTML =\n      '<h1>your DOM here</h1><pre id=\"content\"></pre>';\n    // /  this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n  connectedCallback() {}\n\n  set content(val) {\n    this._content = val;\n    // render changes\n    let el = this.shadowRoot.querySelector(\"#content\");\n    el.textContent = JSON.stringify(this._content, 0, 2);\n  }\n  get content() {\n    return this._content;\n  }\n\n  // disconnectedCallback() {\n  //   this.shadowRoot.querySelector(\"#grid-bord\").removeEventListener();\n  // }\n}\nwindow.customElements.define(\"grid-game\", GridGame);\n\nsetTimeout(() => {\n  let el = document.getElementById(\"mine\");\n  el.content = obj;\n}, 10);\nexport default GridGame;\n"]},"metadata":{},"sourceType":"module"}