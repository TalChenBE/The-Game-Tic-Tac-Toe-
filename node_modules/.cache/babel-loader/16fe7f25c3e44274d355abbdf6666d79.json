{"ast":null,"code":"import Place from \"./components/Place\";\nimport * as getTypePlayer from \"./App\";\nimport \"./GridBord.css\";\nconst sizeBord = 9;\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<style>\n.body{\n  margin: auto;\n  width: 310px;\n  height: 310px;\n  display: grid;\n  grid-template-columns: repeat(3, 100px);\n  grid-template-rows: repeat(3, 1fr);\n  column-gap: 5px;\n  row-gap: 5px;\n  align-items: start;\n  background-color: white;\n}\n.placebnt{\n\n}\n\n</style>\n<div class=\"body\">\n  <Place className=\"placebnt\" name=\"0\" player=${typePlayer} />\n  <Place className=\"placebnt\" name=\"1\" player={typePlayer} />\n  <Place className=\"placebnt\" name=\"2\" player={typePlayer} />\n  <Place className=\"placebnt\" name=\"3\" player={typePlayer} />\n  <Place className=\"placebnt\" name=\"4\" player={typePlayer} />\n  <Place className=\"placebnt\" name=\"5\" player={typePlayer} />\n  <Place className=\"placebnt\" name=\"6\" player={typePlayer} />\n  <Place className=\"placebnt\" name=\"7\" player={typePlayer} />\n  <Place className=\"placebnt\" name=\"8\" player={typePlayer} />\n</div>\n`;\n\nclass BordGrid extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({\n      mode: \"open\"\n    });\n    this.shadowRoot.appendChild(template.content.cloneNode(true)); // for (let i = 1; i <= sizeBord; i++) {\n    //}\n  }\n\n  connectedCallback() {} //   let typePlayer = getTypePlayer.typePlayer;\n  //     this.innerHTML = `<Place name=${i} player=${typePlayer} /> `;\n  //   }\n  // }\n\n\n}\n\nwindow.customElements.define(\"bord-template\", BordGrid);\nexport default BordGrid;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/game/Tic-Tok-Toe/src/BordGrid.js"],"names":["Place","getTypePlayer","sizeBord","template","document","createElement","innerHTML","typePlayer","BordGrid","HTMLElement","constructor","attachShadow","mode","shadowRoot","appendChild","content","cloneNode","connectedCallback","window","customElements","define"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAO,KAAKC,aAAZ,MAA+B,OAA/B;AACA,OAAO,gBAAP;AAEA,MAAMC,QAAQ,GAAG,CAAjB;AACA,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;AACAF,QAAQ,CAACG,SAAT,GAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgDC,UAAW;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9BA;;AA+BA,MAAMC,QAAN,SAAuBC,WAAvB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,YAAL,CAAkB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAlB;AACA,SAAKC,UAAL,CAAgBC,WAAhB,CAA4BX,QAAQ,CAACY,OAAT,CAAiBC,SAAjB,CAA2B,IAA3B,CAA5B,EAHY,CAIZ;AACA;AACD;;AACDC,EAAAA,iBAAiB,GAAG,CAAE,CARW,CASjC;AACA;AACA;AACA;;;AAZiC;;AAcnCC,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,eAA7B,EAA8CZ,QAA9C;AAEA,eAAeA,QAAf","sourcesContent":["import Place from \"./components/Place\";\nimport * as getTypePlayer from \"./App\";\nimport \"./GridBord.css\";\n\nconst sizeBord = 9;\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<style>\n.body{\n  margin: auto;\n  width: 310px;\n  height: 310px;\n  display: grid;\n  grid-template-columns: repeat(3, 100px);\n  grid-template-rows: repeat(3, 1fr);\n  column-gap: 5px;\n  row-gap: 5px;\n  align-items: start;\n  background-color: white;\n}\n.placebnt{\n\n}\n\n</style>\n<div class=\"body\">\n  <Place className=\"placebnt\" name=\"0\" player=${typePlayer} />\n  <Place className=\"placebnt\" name=\"1\" player={typePlayer} />\n  <Place className=\"placebnt\" name=\"2\" player={typePlayer} />\n  <Place className=\"placebnt\" name=\"3\" player={typePlayer} />\n  <Place className=\"placebnt\" name=\"4\" player={typePlayer} />\n  <Place className=\"placebnt\" name=\"5\" player={typePlayer} />\n  <Place className=\"placebnt\" name=\"6\" player={typePlayer} />\n  <Place className=\"placebnt\" name=\"7\" player={typePlayer} />\n  <Place className=\"placebnt\" name=\"8\" player={typePlayer} />\n</div>\n`;\nclass BordGrid extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n    // for (let i = 1; i <= sizeBord; i++) {\n    //}\n  }\n  connectedCallback() {}\n  //   let typePlayer = getTypePlayer.typePlayer;\n  //     this.innerHTML = `<Place name=${i} player=${typePlayer} /> `;\n  //   }\n  // }\n}\nwindow.customElements.define(\"bord-template\", BordGrid);\n\nexport default BordGrid;\n"]},"metadata":{},"sourceType":"module"}