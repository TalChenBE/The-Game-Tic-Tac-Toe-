{"ast":null,"code":"var _jsxFileName = \"/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport * as getBord from \"./OnePlace\";\nimport React from \"react\";\nimport Scores from \"./components/Scores\";\nimport ButtonCom from \"./components/ButtonCom\";\nimport GridGame from \"./GridGame.js\";\nimport OnePlace from \"./OnePlace\";\nimport * as getFunc from \"./OnePlace\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar bord = getBord.bord,\n    //typePlayer = \"X\",\nnumClicked;\nconst sizeBord = getBord.sizeBord;\n\nfunction App() {\n  _s();\n\n  var initTie = JSON.parse(localStorage.getItem(\"tie\"));\n  var initScoreX = JSON.parse(localStorage.getItem(\"scoreX\"));\n  var initScoreO = JSON.parse(localStorage.getItem(\"scoreO\"));\n  const [player, setPlayer] = useState(\"X\");\n  const [typeplayer, setTypePlayer] = useState(\"X\");\n  const [numsWinX, setNumsWinX] = useState(initScoreX !== null && initScoreX !== void 0 ? initScoreX : 0);\n  const [numsTie, setNumsTie] = useState(initTie !== null && initTie !== void 0 ? initTie : 0);\n  const [numsWinO, setNumsWinO] = useState(initScoreO !== null && initScoreO !== void 0 ? initScoreO : 0);\n\n  function handleClick() {\n    let flag = true;\n    let index = getFunc.index;\n\n    if (bord[index] === typePlayer) {\n      if (typePlayer === \"X\") {\n        // typePlayer = \"O\";\n        setTypePlayer(\"O\");\n      } else {\n        // typePlayer = \"X\";\n        setTypePlayer(\"X\");\n      }\n    }\n\n    numClicked = getBord.numClicked;\n    var retval = isWin(bord);\n\n    if (retval === \"X\" || retval === \"O\") {\n      resetGame(\"Congratulations \" + retval + \" won!\", retval);\n      if (retval === \"X\") setNumsWinX(numsWinX + 1);else setNumsWinO(numsWinO + 1);\n      flag = false;\n    }\n\n    if (numClicked === sizeBord && flag) {\n      resetGame(\" TIE \", null);\n      setNumsTie(numsTie + 1);\n    }\n  }\n\n  const listener = () => {\n    // console.log(\"state in handler: \" + typePlayer);\n    getFunc.setPlayerTypePlace(typePlayer);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"click\", listener);\n  }, [typePlayer]);\n\n  function handleClickRESETgame() {\n    bord = bord.map(() => \" \");\n    bord[sizeBord] = \"T\";\n    setNumsWinX(0);\n    setNumsTie(0);\n    setNumsWinO(0); // localStorage.setItem(\"bord\", JSON.stringify(bord));\n    // localStorage.setItem(\"tie\", \"0\");\n    // localStorage.setItem(\"scoreX\", \"0\");\n    // localStorage.setItem(\"scoreO\", \"0\");\n\n    localStorage.clear();\n    window.location.reload();\n  }\n\n  function handleClickSAVEgame() {\n    console.log(\"bord - btn save : \" + bord);\n    localStorage.setItem(\"bord\", JSON.stringify(bord));\n    localStorage.setItem(\"tie\", JSON.stringify(numsTie));\n    localStorage.setItem(\"scoreX\", JSON.stringify(numsWinX));\n    localStorage.setItem(\"scoreO\", JSON.stringify(numsWinO));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"The Tic Tok Toe game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Turn player: \", typePlayer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bnt\",\n        children: [/*#__PURE__*/_jsxDEV(\"button-component\", {\n          name: \"reset\",\n          onClick: handleClickRESETgame,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            slot: \"compButton\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button-component\", {\n          name: \"save\",\n          onClick: handleClickSAVEgame,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            slot: \"compButton\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bord\",\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(\"grid-game\", {\n        id: \"gridi\",\n        name: typePlayer,\n        className: \"grid-game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"users-scores\", {\n      className: \"userScores\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        slot: \"px\",\n        value: numsWinX,\n        children: numsWinX\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        slot: \"tie\",\n        value: numsTie,\n        children: numsTie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        slot: \"po\",\n        value: numsWinO,\n        children: numsWinO\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yJN27J9uNOP1uVMm5tjHjJ3YZAI=\");\n\n_c = App;\n\nfunction isWin(bord1) {\n  var win = true,\n      player;\n  const sqrtSizeBord = Math.sqrt(sizeBord, 2); //check if ther is a win in row\n\n  for (let i = 0; i < sizeBord; i += sqrtSizeBord) {\n    player = bord1[i];\n    win = true;\n\n    for (let j = 0; j < sqrtSizeBord; j++) {\n      if (bord1[j + i] !== player) win = false;\n    }\n\n    if (player !== \" \" && win === true) {\n      return player;\n    }\n  } //check if ther is a win in colomn\n\n\n  for (let i = 0; i < sqrtSizeBord; i++) {\n    player = bord1[i];\n    win = true;\n\n    for (let j = i; j < sizeBord; j += sqrtSizeBord) {\n      if (bord1[j] !== player) win = false;\n    }\n\n    if (player !== \" \" && win === true) {\n      return player;\n    }\n  } //check if ther is a win in the main diagonal\n\n\n  player = bord1[0];\n  win = true;\n\n  for (let i = 0; i < sizeBord; i += sqrtSizeBord + 1) {\n    if (bord1[i] !== player) win = false;\n  }\n\n  if (player !== \" \" && win === true) {\n    return player;\n  } //check if ther is a win in the main diagonal\n\n\n  player = bord1[sqrtSizeBord - 1];\n  win = true;\n\n  for (let i = sqrtSizeBord - 1; i < sizeBord; i += sqrtSizeBord - 1) {\n    if (bord1[i] !== player) win = false;\n  }\n\n  if (player !== \" \" && win === true) {\n    return player;\n  }\n\n  return \"nobady\";\n}\n\nfunction resetGame(msg) {\n  alert(msg);\n  bord = bord.map(() => \" \");\n  bord[sizeBord] = \"T\";\n  localStorage.setItem(\"bord\", JSON.stringify(bord));\n  bord[sizeBord] = \"F\"; // window.location.reload();\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/App.js"],"names":["useState","useEffect","useRef","getBord","React","Scores","ButtonCom","GridGame","OnePlace","getFunc","bord","numClicked","sizeBord","App","initTie","JSON","parse","localStorage","getItem","initScoreX","initScoreO","player","setPlayer","typeplayer","setTypePlayer","numsWinX","setNumsWinX","numsTie","setNumsTie","numsWinO","setNumsWinO","handleClick","flag","index","typePlayer","retval","isWin","resetGame","listener","setPlayerTypePlace","window","addEventListener","handleClickRESETgame","map","clear","location","reload","handleClickSAVEgame","console","log","setItem","stringify","bord1","win","sqrtSizeBord","Math","sqrt","i","j","msg","alert"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport * as getBord from \"./OnePlace\";\nimport React from \"react\";\nimport Scores from \"./components/Scores\";\nimport ButtonCom from \"./components/ButtonCom\";\nimport GridGame from \"./GridGame.js\";\nimport OnePlace from \"./OnePlace\";\nimport * as getFunc from \"./OnePlace\";\n\nvar bord = getBord.bord,\n  //typePlayer = \"X\",\n  numClicked;\nconst sizeBord = getBord.sizeBord;\n\nfunction App() {\n  var initTie = JSON.parse(localStorage.getItem(\"tie\"));\n  var initScoreX = JSON.parse(localStorage.getItem(\"scoreX\"));\n  var initScoreO = JSON.parse(localStorage.getItem(\"scoreO\"));\n\n  const [player, setPlayer] = useState(\"X\");\n  const [typeplayer, setTypePlayer] = useState(\"X\");\n\n  const [numsWinX, setNumsWinX] = useState(initScoreX ?? 0);\n  const [numsTie, setNumsTie] = useState(initTie ?? 0);\n  const [numsWinO, setNumsWinO] = useState(initScoreO ?? 0);\n  function handleClick() {\n    let flag = true;\n    let index = getFunc.index;\n    if (bord[index] === typePlayer) {\n      if (typePlayer === \"X\") {\n        // typePlayer = \"O\";\n        setTypePlayer(\"O\");\n      } else {\n        // typePlayer = \"X\";\n        setTypePlayer(\"X\");\n      }\n    }\n\n    numClicked = getBord.numClicked;\n    var retval = isWin(bord);\n    if (retval === \"X\" || retval === \"O\") {\n      resetGame(\"Congratulations \" + retval + \" won!\", retval);\n      if (retval === \"X\") setNumsWinX(numsWinX + 1);\n      else setNumsWinO(numsWinO + 1);\n      flag = false;\n    }\n    if (numClicked === sizeBord && flag) {\n      resetGame(\" TIE \", null);\n      setNumsTie(numsTie + 1);\n    }\n  }\n\n  const listener = () => {\n    // console.log(\"state in handler: \" + typePlayer);\n    getFunc.setPlayerTypePlace(typePlayer);\n  };\n  React.useEffect(() => {\n    window.addEventListener(\"click\", listener);\n  }, [typePlayer]);\n\n  function handleClickRESETgame() {\n    bord = bord.map(() => \" \");\n    bord[sizeBord] = \"T\";\n    setNumsWinX(0);\n    setNumsTie(0);\n    setNumsWinO(0);\n    // localStorage.setItem(\"bord\", JSON.stringify(bord));\n    // localStorage.setItem(\"tie\", \"0\");\n    // localStorage.setItem(\"scoreX\", \"0\");\n    // localStorage.setItem(\"scoreO\", \"0\");\n    localStorage.clear();\n    window.location.reload();\n  }\n  function handleClickSAVEgame() {\n    console.log(\"bord - btn save : \" + bord);\n    localStorage.setItem(\"bord\", JSON.stringify(bord));\n    localStorage.setItem(\"tie\", JSON.stringify(numsTie));\n    localStorage.setItem(\"scoreX\", JSON.stringify(numsWinX));\n    localStorage.setItem(\"scoreO\", JSON.stringify(numsWinO));\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"heder\">\n        <div>\n          <h1>The Tic Tok Toe game</h1>\n        </div>\n        <h2>Turn player: {typePlayer}</h2>\n        <div className=\"bnt\">\n          <button-component name=\"reset\" onClick={handleClickRESETgame}>\n            <div slot=\"compButton\">Reset</div>\n          </button-component>\n          <button-component name=\"save\" onClick={handleClickSAVEgame}>\n            <div slot=\"compButton\">Save</div>\n          </button-component>\n        </div>\n      </div>\n      <div className=\"bord\" onClick={handleClick}>\n        <grid-game\n          id=\"gridi\"\n          name={typePlayer}\n          className=\"grid-game\"\n        ></grid-game>\n      </div>\n      <div></div>\n\n      <users-scores className=\"userScores\">\n        <div slot=\"px\" value={numsWinX}>\n          {numsWinX}\n        </div>\n        <div slot=\"tie\" value={numsTie}>\n          {numsTie}\n        </div>\n        <div slot=\"po\" value={numsWinO}>\n          {numsWinO}\n        </div>\n      </users-scores>\n    </div>\n  );\n}\n\nfunction isWin(bord1) {\n  var win = true,\n    player;\n\n  const sqrtSizeBord = Math.sqrt(sizeBord, 2);\n  //check if ther is a win in row\n  for (let i = 0; i < sizeBord; i += sqrtSizeBord) {\n    player = bord1[i];\n    win = true;\n    for (let j = 0; j < sqrtSizeBord; j++) {\n      if (bord1[j + i] !== player) win = false;\n    }\n    if (player !== \" \" && win === true) {\n      return player;\n    }\n  }\n  //check if ther is a win in colomn\n  for (let i = 0; i < sqrtSizeBord; i++) {\n    player = bord1[i];\n    win = true;\n    for (let j = i; j < sizeBord; j += sqrtSizeBord) {\n      if (bord1[j] !== player) win = false;\n    }\n    if (player !== \" \" && win === true) {\n      return player;\n    }\n  }\n  //check if ther is a win in the main diagonal\n  player = bord1[0];\n  win = true;\n  for (let i = 0; i < sizeBord; i += sqrtSizeBord + 1) {\n    if (bord1[i] !== player) win = false;\n  }\n  if (player !== \" \" && win === true) {\n    return player;\n  }\n\n  //check if ther is a win in the main diagonal\n  player = bord1[sqrtSizeBord - 1];\n  win = true;\n  for (let i = sqrtSizeBord - 1; i < sizeBord; i += sqrtSizeBord - 1) {\n    if (bord1[i] !== player) win = false;\n  }\n  if (player !== \" \" && win === true) {\n    return player;\n  }\n\n  return \"nobady\";\n}\n\nfunction resetGame(msg) {\n  alert(msg);\n  bord = bord.map(() => \" \");\n  bord[sizeBord] = \"T\";\n  localStorage.setItem(\"bord\", JSON.stringify(bord));\n  bord[sizeBord] = \"F\";\n  // window.location.reload();\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}