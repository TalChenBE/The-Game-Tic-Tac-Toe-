{"ast":null,"code":"import \"./Scores.css\";\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<style>\n.body {\n  margin: auto;\n  font-family: \"Arial\", sans-serif;\n  max-width: 400px;\n  align-items: center;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  column-gap: 5px;\n  row-gap: 20px;\n  margin-top: 50px;\n}\n</style>\n  <div class=\"body\">\n\n    <h3> Player X </h3>\n    <h3> TIE </h3>\n    <h3> Player O </h3>\n\n    <h3><slot name=\"px\" /></h3>\n    <h3><slot name=\"tie\" /></h3>\n    <h3><slot name=\"po\" /></h3>\n\n</div>\n`;\n\nclass Scores extends HTMLElement {\n  constructor() {\n    super();\n    this.showInfo = true;\n    this.attachShadow({\n      mode: \"open\"\n    });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n    const name = this.getAttribute(\"name\");\n    const value = this.getAttribute(\"value\"); // this.shadowRoot.querySelector(\"h3\").innerText = this.getAttribute(\"value\");\n  }\n\n  get value() {\n    return this.getAttribute(\"value\");\n  }\n\n  attributeChangedCallback(name, value, newValue) {\n    if (value === newValue) {\n      console.log(\"no change\");\n    }\n\n    console.log(`The attribute ${name} has changed`);\n  }\n\n}\n\nwindow.customElements.define(\"users-scores\", Scores);\nexport default Scores;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/game/Tic-Tok-Toe/src/Scores.js"],"names":["template","document","createElement","innerHTML","Scores","HTMLElement","constructor","showInfo","attachShadow","mode","shadowRoot","appendChild","content","cloneNode","name","getAttribute","value","attributeChangedCallback","newValue","console","log","window","customElements","define"],"mappings":"AAAA,OAAO,cAAP;AAEA,MAAMA,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;AACAF,QAAQ,CAACG,SAAT,GAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BA;;AA4BA,MAAMC,MAAN,SAAqBC,WAArB,CAAiC;AAC/BC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,QAAL,GAAgB,IAAhB;AACA,SAAKC,YAAL,CAAkB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAlB;AACA,SAAKC,UAAL,CAAgBC,WAAhB,CAA4BX,QAAQ,CAACY,OAAT,CAAiBC,SAAjB,CAA2B,IAA3B,CAA5B;AACA,UAAMC,IAAI,GAAG,KAAKC,YAAL,CAAkB,MAAlB,CAAb;AACA,UAAMC,KAAK,GAAG,KAAKD,YAAL,CAAkB,OAAlB,CAAd,CAPY,CAQZ;AACD;;AACQ,MAALC,KAAK,GAAG;AACV,WAAO,KAAKD,YAAL,CAAkB,OAAlB,CAAP;AACD;;AAEDE,EAAAA,wBAAwB,CAACH,IAAD,EAAOE,KAAP,EAAcE,QAAd,EAAwB;AAC9C,QAAIF,KAAK,KAAKE,QAAd,EAAwB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AAEDD,IAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBN,IAAK,cAAlC;AACD;;AArB8B;;AAuBjCO,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,cAA7B,EAA6CnB,MAA7C;AAEA,eAAeA,MAAf","sourcesContent":["import \"./Scores.css\";\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<style>\n.body {\n  margin: auto;\n  font-family: \"Arial\", sans-serif;\n  max-width: 400px;\n  align-items: center;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  column-gap: 5px;\n  row-gap: 20px;\n  margin-top: 50px;\n}\n</style>\n  <div class=\"body\">\n\n    <h3> Player X </h3>\n    <h3> TIE </h3>\n    <h3> Player O </h3>\n\n    <h3><slot name=\"px\" /></h3>\n    <h3><slot name=\"tie\" /></h3>\n    <h3><slot name=\"po\" /></h3>\n\n</div>\n`;\n\nclass Scores extends HTMLElement {\n  constructor() {\n    super();\n\n    this.showInfo = true;\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n    const name = this.getAttribute(\"name\");\n    const value = this.getAttribute(\"value\");\n    // this.shadowRoot.querySelector(\"h3\").innerText = this.getAttribute(\"value\");\n  }\n  get value() {\n    return this.getAttribute(\"value\");\n  }\n\n  attributeChangedCallback(name, value, newValue) {\n    if (value === newValue) {\n      console.log(\"no change\");\n    }\n\n    console.log(`The attribute ${name} has changed`);\n  }\n}\nwindow.customElements.define(\"users-scores\", Scores);\n\nexport default Scores;\n"]},"metadata":{},"sourceType":"module"}