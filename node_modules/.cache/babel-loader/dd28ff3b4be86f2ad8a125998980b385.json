{"ast":null,"code":"var _initBord;\n\n// import * as getBord from \"./components/Place\";\nimport * as getPlayer from \"./App\";\nimport OnePlace from \"./OnePlace\";\nimport \"./GridGame.css\";\nvar numClicked = 0;\nvar initBord = localStorage.getItem(\"bord\");\ninitBord = JSON.parse(initBord);\nconst sizeBord = 9;\nvar emptyBord = [];\n\nfor (let i = 0; i < sizeBord; i++) emptyBord[i] = \" \";\n\nemptyBord[sizeBord] = \"T\";\nconst bord = (_initBord = initBord) !== null && _initBord !== void 0 ? _initBord : emptyBord; // var typePlayer;\n\nfunction reasetBoard() {\n  for (let i = 0; i < sizeBord; i++) {\n    const btn = this.shadowRoot.getElementById(\"placeButton\");\n    btn.innerText = bord[index];\n  }\n}\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    let el = ``;\n    let typePlayer = this.getAttribute(\"name\");\n\n    for (let i = 0; i < sizeBord; i++) {\n      el += `<place-component id=\"placeBtn\" name=${i} typePlayer=${typePlayer} onClickPlace=\"check\"></place-component>`;\n    }\n\n    this.innerHTML += `<div class=\"body\"> ${el} </div>`;\n  }\n\n}\n\nwindow.customElements.define(\"grid-game\", GridGame);\nexport { sizeBord, reasetBoard };\nexport default GridGame;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/GridGame.js"],"names":["getPlayer","OnePlace","numClicked","initBord","localStorage","getItem","JSON","parse","sizeBord","emptyBord","i","bord","reasetBoard","btn","shadowRoot","getElementById","innerText","index","GridGame","HTMLElement","constructor","connectedCallback","el","typePlayer","getAttribute","innerHTML","window","customElements","define"],"mappings":";;AAAA;AACA,OAAO,KAAKA,SAAZ,MAA2B,OAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,gBAAP;AAEA,IAAIC,UAAU,GAAG,CAAjB;AACA,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAf;AACAF,QAAQ,GAAGG,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAX;AACA,MAAMK,QAAQ,GAAG,CAAjB;AAEA,IAAIC,SAAS,GAAG,EAAhB;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAApB,EAA8BE,CAAC,EAA/B,EAAmCD,SAAS,CAACC,CAAD,CAAT,GAAe,GAAf;;AACnCD,SAAS,CAACD,QAAD,CAAT,GAAsB,GAAtB;AAEA,MAAMG,IAAI,gBAAGR,QAAH,iDAAeM,SAAzB,C,CACA;;AAEA,SAASG,WAAT,GAAuB;AACrB,OAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAApB,EAA8BE,CAAC,EAA/B,EAAmC;AACjC,UAAMG,GAAG,GAAG,KAAKC,UAAL,CAAgBC,cAAhB,CAA+B,aAA/B,CAAZ;AACAF,IAAAA,GAAG,CAACG,SAAJ,GAAgBL,IAAI,CAACM,KAAD,CAApB;AACD;AACF;;AAED,MAAMC,QAAN,SAAuBC,WAAvB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,EAAE,GAAI,EAAV;AACA,QAAIC,UAAU,GAAG,KAAKC,YAAL,CAAkB,MAAlB,CAAjB;;AACA,SAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAApB,EAA8BE,CAAC,EAA/B,EAAmC;AACjCY,MAAAA,EAAE,IAAK,uCAAsCZ,CAAE,eAAca,UAAW,0CAAxE;AACD;;AACD,SAAKE,SAAL,IAAmB,sBAAqBH,EAAG,SAA3C;AACD;;AAZgC;;AAcnCI,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,WAA7B,EAA0CV,QAA1C;AAEA,SAASV,QAAT,EAAmBI,WAAnB;AACA,eAAeM,QAAf","sourcesContent":["// import * as getBord from \"./components/Place\";\nimport * as getPlayer from \"./App\";\nimport OnePlace from \"./OnePlace\";\nimport \"./GridGame.css\";\n\nvar numClicked = 0;\nvar initBord = localStorage.getItem(\"bord\");\ninitBord = JSON.parse(initBord);\nconst sizeBord = 9;\n\nvar emptyBord = [];\nfor (let i = 0; i < sizeBord; i++) emptyBord[i] = \" \";\nemptyBord[sizeBord] = \"T\";\n\nconst bord = initBord ?? emptyBord;\n// var typePlayer;\n\nfunction reasetBoard() {\n  for (let i = 0; i < sizeBord; i++) {\n    const btn = this.shadowRoot.getElementById(\"placeButton\");\n    btn.innerText = bord[index];\n  }\n}\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    let el = ``;\n    let typePlayer = this.getAttribute(\"name\");\n    for (let i = 0; i < sizeBord; i++) {\n      el += `<place-component id=\"placeBtn\" name=${i} typePlayer=${typePlayer} onClickPlace=\"check\"></place-component>`;\n    }\n    this.innerHTML += `<div class=\"body\"> ${el} </div>`;\n  }\n}\nwindow.customElements.define(\"grid-game\", GridGame);\n\nexport { sizeBord, reasetBoard };\nexport default GridGame;\n"]},"metadata":{},"sourceType":"module"}