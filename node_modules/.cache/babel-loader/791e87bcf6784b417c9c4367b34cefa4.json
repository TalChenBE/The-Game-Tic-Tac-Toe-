{"ast":null,"code":"import Place from \"./components/Place\";\nimport * as getTypePlayer from \"./App\";\nimport \"./GridBord.css\";\nconst sizeBord = 9; // const template = document.createElement(\"template\");\n// template.innerHTML = `\n// <div class=\"body\">\n//   <p><slot name = place/> </p>\n// </div>\n// `;\n\nclass BordGrid extends HTMLElement {\n  constructor() {\n    super(); // this.attachShadow({ mode: \"open\" });\n\n    {\n      /* <Place className=\"b2\" name={i} player={typePlayer} /> */\n    } // this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  connectedCallback() {\n    let typePlayer = getTypePlayer.typePlayer;\n\n    for (let i = 1; i <= sizeBord; i++) {\n      this.innerHTML = `<Place className=\"b2\" name=${i} player=${typePlayer} /> `;\n    }\n  }\n\n}\n\nwindow.customElements.define(\"bord-template\", BordGrid);\nexport default BordGrid;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/game/Tic-Tok-Toe/src/BordGrid.js"],"names":["Place","getTypePlayer","sizeBord","BordGrid","HTMLElement","constructor","connectedCallback","typePlayer","i","innerHTML","window","customElements","define"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAO,KAAKC,aAAZ,MAA+B,OAA/B;AACA,OAAO,gBAAP;AAEA,MAAMC,QAAQ,GAAG,CAAjB,C,CACA;AACA;AACA;AACA;AAEA;AACA;;AACA,MAAMC,QAAN,SAAuBC,WAAvB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ,YADY,CAEZ;;AACA;AACE;AACD,KALW,CAMZ;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,UAAU,GAAGN,aAAa,CAACM,UAA/B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,QAArB,EAA+BM,CAAC,EAAhC,EAAoC;AAClC,WAAKC,SAAL,GAAkB,8BAA6BD,CAAE,WAAUD,UAAW,MAAtE;AACD;AACF;;AAdgC;;AAgBnCG,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,eAA7B,EAA8CT,QAA9C;AAEA,eAAeA,QAAf","sourcesContent":["import Place from \"./components/Place\";\nimport * as getTypePlayer from \"./App\";\nimport \"./GridBord.css\";\n\nconst sizeBord = 9;\n// const template = document.createElement(\"template\");\n// template.innerHTML = `\n// <div class=\"body\">\n//   <p><slot name = place/> </p>\n\n// </div>\n// `;\nclass BordGrid extends HTMLElement {\n  constructor() {\n    super();\n    // this.attachShadow({ mode: \"open\" });\n    {\n      /* <Place className=\"b2\" name={i} player={typePlayer} /> */\n    }\n    // this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n  connectedCallback() {\n    let typePlayer = getTypePlayer.typePlayer;\n    for (let i = 1; i <= sizeBord; i++) {\n      this.innerHTML = `<Place className=\"b2\" name=${i} player=${typePlayer} /> `;\n    }\n  }\n}\nwindow.customElements.define(\"bord-template\", BordGrid);\n\nexport default BordGrid;\n"]},"metadata":{},"sourceType":"module"}