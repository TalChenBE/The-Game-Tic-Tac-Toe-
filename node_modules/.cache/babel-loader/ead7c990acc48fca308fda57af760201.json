{"ast":null,"code":"var _initBord;\n\nimport \"./OnePlace.css\";\nimport * as getPlayer from \"./App\";\nconst template = document.createElement(\"template\");\nvar typePlayer; // const namePlayer = getPlayer.namePlayer;\n\nvar numClicked = 0;\nvar initBord = localStorage.getItem(\"bord\");\ninitBord = JSON.parse(initBord);\nconst sizeBord = 9;\nvar emptyBord = [];\n\nfor (let i = 0; i < sizeBord; i++) emptyBord[i] = \" \";\n\nemptyBord[sizeBord] = \"T\";\nconst bord = (_initBord = initBord) !== null && _initBord !== void 0 ? _initBord : emptyBord;\nvar index;\nconst style = `<style>\n.place-button {\n    color: white;\n    font-size: xx-large;\n    width: 100px;\n    height: 100px;\n    background: black;\n    border: none;\n    font-weight: bold;\n  }\n\n  .place-button:hover {\n    background-color: rgba(3, 3, 32, 0.884);\n    font-style: italic;\n    color: transparent;\n    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n  }\n\n  .place-button:focus {\n    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n  }\n</style>`;\n\nfunction setPlayerTypePlace(player) {\n  typePlayer = player;\n  console.log(\"OnePlace view \" + typePlayer);\n}\n\nclass OnePlace extends HTMLElement {\n  constructor() {\n    super();\n    index = parseInt(this.getAttribute(\"name\"), 10);\n    typePlayer = this.getAttribute(\"typePlayer\");\n    template.innerHTML = style + ` <button id=\"placeButton\" class=\"place-button\" className=\"lala\">\n          ${bord[index]}\n        </button>\n      `;\n    this.attachShadow({\n      mode: \"open\"\n    });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  placebutton() {\n    if (bord[this.getAttribute(\"name\")] === \" \") {\n      console.log(\"get: \" + this.getAttribute(\"name\"));\n      bord[this.getAttribute(\"name\")] = this.getAttribute(\"typePlayer\");\n\n      if (bord[sizeBord] === \"F\") {\n        numClicked = 0;\n        bord[sizeBord] = \"T\";\n      }\n\n      numClicked++; //console.log(\"bord: \" + bord);\n\n      const btn = this.shadowRoot.getElementById(\"btn\");\n      btn.nodeValue(\"XXX\");\n    }\n\n    this.shadowRoot.querySelector(\"#placeButton\").ariaValueText = \"W\";\n  }\n\n  connectedCallback() {\n    this.shadowRoot.querySelector(\"#placeButton\").addEventListener(\"click\", () => this.placebutton());\n  }\n\n  setPlayerType() {\n    if (typePlayer === \"X\") {\n      typePlayer = \"O\";\n    } else {\n      typePlayer = \"X\";\n    }\n  }\n\n  disconnectedCallback() {\n    this.shadowRoot.querySelector(\"#place-button\").removeEventListener();\n  }\n\n}\n\nwindow.customElements.define(\"place-component\", OnePlace);\nexport { bord, numClicked, sizeBord, setPlayerTypePlace };\nexport default OnePlace;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/OnePlace.js"],"names":["getPlayer","template","document","createElement","typePlayer","numClicked","initBord","localStorage","getItem","JSON","parse","sizeBord","emptyBord","i","bord","index","style","setPlayerTypePlace","player","console","log","OnePlace","HTMLElement","constructor","parseInt","getAttribute","innerHTML","attachShadow","mode","shadowRoot","appendChild","content","cloneNode","placebutton","btn","getElementById","nodeValue","querySelector","ariaValueText","connectedCallback","addEventListener","setPlayerType","disconnectedCallback","removeEventListener","window","customElements","define"],"mappings":"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","sourcesContent":["import \"./OnePlace.css\";\nimport * as getPlayer from \"./App\";\n\nconst template = document.createElement(\"template\");\n\nvar typePlayer;\n// const namePlayer = getPlayer.namePlayer;\nvar numClicked = 0;\nvar initBord = localStorage.getItem(\"bord\");\ninitBord = JSON.parse(initBord);\nconst sizeBord = 9;\n\nvar emptyBord = [];\nfor (let i = 0; i < sizeBord; i++) emptyBord[i] = \" \";\nemptyBord[sizeBord] = \"T\";\n\nconst bord = initBord ?? emptyBord;\n\nvar index;\n\nconst style = `<style>\n.place-button {\n    color: white;\n    font-size: xx-large;\n    width: 100px;\n    height: 100px;\n    background: black;\n    border: none;\n    font-weight: bold;\n  }\n\n  .place-button:hover {\n    background-color: rgba(3, 3, 32, 0.884);\n    font-style: italic;\n    color: transparent;\n    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n  }\n\n  .place-button:focus {\n    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n  }\n</style>`;\n\nfunction setPlayerTypePlace(player) {\n  typePlayer = player;\n  console.log(\"OnePlace view \" + typePlayer);\n}\n\nclass OnePlace extends HTMLElement {\n  constructor() {\n    super();\n    index = parseInt(this.getAttribute(\"name\"), 10);\n    typePlayer = this.getAttribute(\"typePlayer\");\n\n    template.innerHTML =\n      style +\n      ` <button id=\"placeButton\" class=\"place-button\" className=\"lala\">\n          ${bord[index]}\n        </button>\n      `;\n\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  placebutton() {\n    if (bord[this.getAttribute(\"name\")] === \" \") {\n      console.log(\"get: \" + this.getAttribute(\"name\"));\n      bord[this.getAttribute(\"name\")] = this.getAttribute(\"typePlayer\");\n      if (bord[sizeBord] === \"F\") {\n        numClicked = 0;\n        bord[sizeBord] = \"T\";\n      }\n      numClicked++;\n      //console.log(\"bord: \" + bord);\n      const btn = this.shadowRoot.getElementById(\"btn\");\n      btn.nodeValue(\"XXX\");\n    }\n    this.shadowRoot.querySelector(\"#placeButton\").ariaValueText = \"W\";\n  }\n\n  connectedCallback() {\n    this.shadowRoot\n      .querySelector(\"#placeButton\")\n      .addEventListener(\"click\", () => this.placebutton());\n  }\n  setPlayerType() {\n    if (typePlayer === \"X\") {\n      typePlayer = \"O\";\n    } else {\n      typePlayer = \"X\";\n    }\n  }\n  disconnectedCallback() {\n    this.shadowRoot.querySelector(\"#place-button\").removeEventListener();\n  }\n}\nwindow.customElements.define(\"place-component\", OnePlace);\n\nexport { bord, numClicked, sizeBord, setPlayerTypePlace };\nexport default OnePlace;\n"]},"metadata":{},"sourceType":"module"}