{"ast":null,"code":"var _jsxFileName = \"/home/talchen/Desktop/learning/react/tic-tac-toe/src/Timer.js\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Timer(props) {\n  var time = new Date().toLocaleTimeString(),\n      hour = new Date().getHours(),\n      min = new Date().getMinutes(),\n      sec = new Date().getSeconds();\n\n  function tick() {\n    const element = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" now it is: \", time, \". \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"diff: \", new Date().getHours() - hour, \" : \", new Date().getMinutes() - min, \" \", \": \", new Date().getSeconds() - sec, \" .\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [new Date().toLocaleTimeString(), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this); // highlight-next-line\n\n\n    ReactDOM.render(element, document.getElementById(\"root\"));\n  }\n}\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/tic-tac-toe/src/Timer.js"],"names":["ReactDOM","Timer","props","time","Date","toLocaleTimeString","hour","getHours","min","getMinutes","sec","getSeconds","tick","element","render","document","getElementById"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,MAAIC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAX;AAAA,MACEC,IAAI,GAAG,IAAIF,IAAJ,GAAWG,QAAX,EADT;AAAA,MAEEC,GAAG,GAAG,IAAIJ,IAAJ,GAAWK,UAAX,EAFR;AAAA,MAGEC,GAAG,GAAG,IAAIN,IAAJ,GAAWO,UAAX,EAHR;;AAKA,WAASC,IAAT,GAAgB;AACd,UAAMC,OAAO,gBACX;AAAA,8BACE;AAAA,mCAAiBV,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,6BACS,IAAIC,IAAJ,GAAWG,QAAX,KAAwBD,IADjC,SAC0C,IAAIF,IAAJ,GAAWK,UAAX,KAA0BD,GADpE,EACyE,GADzE,QAEK,IAAIJ,IAAJ,GAAWO,UAAX,KAA0BD,GAF/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAA,mBAAK,IAAIN,IAAJ,GAAWC,kBAAX,EAAL;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADc,CAWd;;;AACAL,IAAAA,QAAQ,CAACc,MAAT,CAAgBD,OAAhB,EAAyBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AACD;AACF;;KApBQf,K;AAsBT,eAAeA,KAAf","sourcesContent":["import ReactDOM from \"react-dom\";\n\nfunction Timer(props) {\n  var time = new Date().toLocaleTimeString(),\n    hour = new Date().getHours(),\n    min = new Date().getMinutes(),\n    sec = new Date().getSeconds();\n\n  function tick() {\n    const element = (\n      <div>\n        <h2> now it is: {time}. </h2>\n        <h2>\n          diff: {new Date().getHours() - hour} : {new Date().getMinutes() - min}{\" \"}\n          : {new Date().getSeconds() - sec} .\n        </h2>\n        <h2>{new Date().toLocaleTimeString()}.</h2>\n      </div>\n    );\n    // highlight-next-line\n    ReactDOM.render(element, document.getElementById(\"root\"));\n  }\n}\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}