{"ast":null,"code":"var _initBord;\n\nimport \"./OnePlace.css\";\nimport * as getPlayer from \"./App\";\nconst template = document.createElement(\"template\");\nvar typePlayer;\nvar numClicked = 0;\nvar initBord = localStorage.getItem(\"bord\");\ninitBord = JSON.parse(initBord);\nconst sizeBord = 9;\nvar emptyBord = [];\n\nfor (let i = 0; i < sizeBord; i++) emptyBord[i] = \" b\";\n\nemptyBord[sizeBord] = \"T\";\nconst bord = (_initBord = initBord) !== null && _initBord !== void 0 ? _initBord : emptyBord;\nvar index;\nconst style = `<style>\n.place-button {\n    color: white;\n    font-size: xx-large;\n    width: 100px;\n    height: 100px;\n    background: black;\n    border: none;\n    font-weight: bold;\n  }\n\n  .place-button:hover {\n    background-color: rgba(3, 3, 32, 0.884);\n    font-style: italic;\n    color: transparent;\n    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n  }\n\n  .place-button:focus {\n    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n  }\n</style>`;\n\nclass PlaceWEB extends HTMLElement {\n  constructor() {\n    super();\n    index = parseInt(this.getAttribute(\"name\"), 10);\n    typePlayer = this.getAttribute(\"typePlayer\"); // console.log(\"tp: \" + typePlayer + \",   index: \" + index);\n\n    var p = bord[index];\n    template.innerHTML = style + ` <button id=\"placeButton\" class=\"place-button\">\n    ${p}\n  </button>\n  `;\n    this.attachShadow({\n      mode: \"open\"\n    });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  placebutton() {\n    if (bord[this.getAttribute(\"name\")] === \" b\") {\n      console.log(\"get: \" + this.getAttribute(\"name\"));\n      bord[this.getAttribute(\"name\")] = this.getAttribute(\"typePlayer\");\n\n      if (bord[sizeBord] === \"F\") {\n        numClicked = 0;\n        bord[sizeBord] = \"T\";\n      }\n\n      document.button.innerHTML = \"W\";\n      console.log(\"laa: \" + d); // if (d !== null) {\n      //   d.textContent = \"w\";\n      // }\n      // if (document.getElementById(\"placeButton\") !== null) {\n      //   console.log(\"lala\");\n      //   document.getElementById(\"placeButton\").textContent = `W`;\n      // }\n\n      numClicked++;\n    }\n  }\n\n  connectedCallback() {\n    // const button = document.getElementById(\"placeButton\");\n    // button.addEventListener(\"click\", () => {\n    //   button.textContent = `${typePlayer}`;\n    //   console.log(\"tp: \" + typePlayer + \",   index: \" + index);\n    // });\n    // button.onclick=function() {\n    //   index =  parseInt(this.getAttribute('name'),10);\n    //   console.log(\"get: \" +index);\n    //   if (bord[index] === \" \") {\n    //     bord[index] = typePlayer;\n    //     console.log(bord);\n    //       if (bord[sizeBord] === \"F\") {\n    //         numClicked = 0;\n    //         bord[sizeBord] = \"T\";\n    //       }\n    //       numClicked++;\n    //     }\n    // }\n    this.shadowRoot.querySelector(\"#placeButton\").addEventListener(\"click\", () => this.placebutton()); // button.addEventListener(\"click\", () => this.placebutton());\n  }\n\n  disconnectedCallback() {\n    // document.getElementById(\"place-button\").removeEventListener();\n    this.shadowRoot.querySelector(\"#place-button\").removeEventListener();\n  }\n\n}\n\nwindow.customElements.define(\"place-component\", PlaceWEB);\nexport { bord, numClicked, sizeBord };\nexport default PlaceWEB;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/OnePlace.js"],"names":["getPlayer","template","document","createElement","typePlayer","numClicked","initBord","localStorage","getItem","JSON","parse","sizeBord","emptyBord","i","bord","index","style","PlaceWEB","HTMLElement","constructor","parseInt","getAttribute","p","innerHTML","attachShadow","mode","shadowRoot","appendChild","content","cloneNode","placebutton","console","log","button","d","connectedCallback","querySelector","addEventListener","disconnectedCallback","removeEventListener","window","customElements","define"],"mappings":"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","sourcesContent":["import \"./OnePlace.css\";\nimport * as getPlayer from \"./App\";\n\nconst template = document.createElement(\"template\");\n\nvar typePlayer;\nvar numClicked = 0;\nvar initBord = localStorage.getItem(\"bord\");\ninitBord = JSON.parse(initBord);\nconst sizeBord = 9;\n\nvar emptyBord = [];\nfor (let i = 0; i < sizeBord; i++) emptyBord[i] = \" b\";\nemptyBord[sizeBord] = \"T\";\n\nconst bord = initBord ?? emptyBord;\n\nvar index;\nconst style = `<style>\n.place-button {\n    color: white;\n    font-size: xx-large;\n    width: 100px;\n    height: 100px;\n    background: black;\n    border: none;\n    font-weight: bold;\n  }\n\n  .place-button:hover {\n    background-color: rgba(3, 3, 32, 0.884);\n    font-style: italic;\n    color: transparent;\n    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n  }\n\n  .place-button:focus {\n    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n  }\n</style>`;\n\nclass PlaceWEB extends HTMLElement {\n  constructor() {\n    super();\n    index = parseInt(this.getAttribute(\"name\"), 10);\n    typePlayer = this.getAttribute(\"typePlayer\");\n    // console.log(\"tp: \" + typePlayer + \",   index: \" + index);\n    var p = bord[index];\n    template.innerHTML =\n      style +\n      ` <button id=\"placeButton\" class=\"place-button\">\n    ${p}\n  </button>\n  `;\n\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  placebutton() {\n    if (bord[this.getAttribute(\"name\")] === \" b\") {\n      console.log(\"get: \" + this.getAttribute(\"name\"));\n      bord[this.getAttribute(\"name\")] = this.getAttribute(\"typePlayer\");\n      if (bord[sizeBord] === \"F\") {\n        numClicked = 0;\n        bord[sizeBord] = \"T\";\n      }\n\n      document.button.innerHTML = \"W\";\n      console.log(\"laa: \" + d);\n      // if (d !== null) {\n      //   d.textContent = \"w\";\n      // }\n      // if (document.getElementById(\"placeButton\") !== null) {\n      //   console.log(\"lala\");\n      //   document.getElementById(\"placeButton\").textContent = `W`;\n      // }\n      numClicked++;\n    }\n  }\n\n  connectedCallback() {\n    // const button = document.getElementById(\"placeButton\");\n    // button.addEventListener(\"click\", () => {\n    //   button.textContent = `${typePlayer}`;\n    //   console.log(\"tp: \" + typePlayer + \",   index: \" + index);\n    // });\n    // button.onclick=function() {\n    //   index =  parseInt(this.getAttribute('name'),10);\n    //   console.log(\"get: \" +index);\n    //   if (bord[index] === \" \") {\n    //     bord[index] = typePlayer;\n    //     console.log(bord);\n    //       if (bord[sizeBord] === \"F\") {\n    //         numClicked = 0;\n    //         bord[sizeBord] = \"T\";\n    //       }\n    //       numClicked++;\n    //     }\n    // }\n\n    this.shadowRoot\n      .querySelector(\"#placeButton\")\n      .addEventListener(\"click\", () => this.placebutton());\n    // button.addEventListener(\"click\", () => this.placebutton());\n  }\n\n  disconnectedCallback() {\n    // document.getElementById(\"place-button\").removeEventListener();\n    this.shadowRoot.querySelector(\"#place-button\").removeEventListener();\n  }\n}\nwindow.customElements.define(\"place-component\", PlaceWEB);\n\nexport { bord, numClicked, sizeBord };\nexport default PlaceWEB;\n"]},"metadata":{},"sourceType":"module"}