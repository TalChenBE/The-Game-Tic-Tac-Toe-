{"ast":null,"code":"import Place from \"./components/Place\";\nimport * as getTypePlayer from \"./App\";\nimport \"./GridBord.css\";\nconst sizeBord = 9;\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<div class=\"body\">\n  <p><slot name = \"place\"/> </p>\n\n</div>\n`;\n\nclass BordGrid extends HTMLElement {\n  constructor() {\n    super(); // this.attachShadow({ mode: \"open\" });\n    // this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  connectedCallback() {\n    let typePlayer = getTypePlayer.typePlayer;\n\n    for (let i = 1; i <= sizeBord; i++) {\n      this.innerHTML = `<Place name=${i} player=${typePlayer} /> `;\n    }\n  }\n\n}\n\nwindow.customElements.define(\"bord-template\", BordGrid);\nexport default BordGrid;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/game/Tic-Tok-Toe/src/BordGrid.js"],"names":["Place","getTypePlayer","sizeBord","template","document","createElement","innerHTML","BordGrid","HTMLElement","constructor","connectedCallback","typePlayer","i","window","customElements","define"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAO,KAAKC,aAAZ,MAA+B,OAA/B;AACA,OAAO,gBAAP;AAEA,MAAMC,QAAQ,GAAG,CAAjB;AACA,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;AACAF,QAAQ,CAACG,SAAT,GAAsB;AACtB;AACA;AACA;AACA;AACA,CALA;;AAMA,MAAMC,QAAN,SAAuBC,WAAvB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ,YADY,CAEZ;AACA;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,UAAU,GAAGV,aAAa,CAACU,UAA/B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIV,QAArB,EAA+BU,CAAC,EAAhC,EAAoC;AAClC,WAAKN,SAAL,GAAkB,eAAcM,CAAE,WAAUD,UAAW,MAAvD;AACD;AACF;;AAXgC;;AAanCE,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,eAA7B,EAA8CR,QAA9C;AAEA,eAAeA,QAAf","sourcesContent":["import Place from \"./components/Place\";\nimport * as getTypePlayer from \"./App\";\nimport \"./GridBord.css\";\n\nconst sizeBord = 9;\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<div class=\"body\">\n  <p><slot name = \"place\"/> </p>\n\n</div>\n`;\nclass BordGrid extends HTMLElement {\n  constructor() {\n    super();\n    // this.attachShadow({ mode: \"open\" });\n    // this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n  connectedCallback() {\n    let typePlayer = getTypePlayer.typePlayer;\n    for (let i = 1; i <= sizeBord; i++) {\n      this.innerHTML = `<Place name=${i} player=${typePlayer} /> `;\n    }\n  }\n}\nwindow.customElements.define(\"bord-template\", BordGrid);\n\nexport default BordGrid;\n"]},"metadata":{},"sourceType":"module"}