{"ast":null,"code":"var _initBord;\n\nimport * as getNumClicks from \"./OnePlace\";\nimport * as getPlayer from \"./App\";\nimport OnePlace from \"./OnePlace\";\nimport \"./GridGame.css\";\nvar numClicked = 0;\nvar initBord = localStorage.getItem(\"bord\");\ninitBord = JSON.parse(initBord);\nconst sizeBord = 9;\nvar emptyBord = [];\n\nfor (let i = 0; i < sizeBord; i++) emptyBord[i] = \" \";\n\nemptyBord[sizeBord] = \"T\";\nconst bord = (_initBord = initBord) !== null && _initBord !== void 0 ? _initBord : emptyBord; // var typePlayer;\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    let el = ``;\n    let typePlayer = this.getAttribute(\"name\");\n\n    for (let i = 0; i < sizeBord; i++) {\n      el += `<place-component id=\"placeBtn\" name=${i} typePlayer=${typePlayer} onClickPlace=\"check\"></place-component>`;\n    }\n\n    this.innerHTML += `<div class=\"body\"> ${el} </div>`;\n\n    if (getNumClicks.numClicked === sizeBord - 1) {\n      setTimeout(() => {\n        console.log(\"hello i an hare!\");\n        numClicked = 0;\n        bord[sizeBord] = \"T\";\n        restBord();\n        console.log(\"board: \" + bord);\n      }, 1000);\n      location.reload();\n    }\n  }\n\n}\n\nwindow.customElements.define(\"grid-game\", GridGame);\nexport { sizeBord };\nexport default GridGame;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/GridGame.js"],"names":["getNumClicks","getPlayer","OnePlace","numClicked","initBord","localStorage","getItem","JSON","parse","sizeBord","emptyBord","i","bord","GridGame","HTMLElement","constructor","connectedCallback","el","typePlayer","getAttribute","innerHTML","setTimeout","console","log","restBord","location","reload","window","customElements","define"],"mappings":";;AAAA,OAAO,KAAKA,YAAZ,MAA8B,YAA9B;AACA,OAAO,KAAKC,SAAZ,MAA2B,OAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,gBAAP;AAEA,IAAIC,UAAU,GAAG,CAAjB;AACA,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAf;AACAF,QAAQ,GAAGG,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAX;AACA,MAAMK,QAAQ,GAAG,CAAjB;AAEA,IAAIC,SAAS,GAAG,EAAhB;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAApB,EAA8BE,CAAC,EAA/B,EAAmCD,SAAS,CAACC,CAAD,CAAT,GAAe,GAAf;;AACnCD,SAAS,CAACD,QAAD,CAAT,GAAsB,GAAtB;AAEA,MAAMG,IAAI,gBAAGR,QAAH,iDAAeM,SAAzB,C,CACA;;AAEA,MAAMG,QAAN,SAAuBC,WAAvB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,EAAE,GAAI,EAAV;AACA,QAAIC,UAAU,GAAG,KAAKC,YAAL,CAAkB,MAAlB,CAAjB;;AACA,SAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAApB,EAA8BE,CAAC,EAA/B,EAAmC;AACjCM,MAAAA,EAAE,IAAK,uCAAsCN,CAAE,eAAcO,UAAW,0CAAxE;AACD;;AACD,SAAKE,SAAL,IAAmB,sBAAqBH,EAAG,SAA3C;;AAEA,QAAIjB,YAAY,CAACG,UAAb,KAA4BM,QAAQ,GAAG,CAA3C,EAA8C;AAC5CY,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACApB,QAAAA,UAAU,GAAG,CAAb;AACAS,QAAAA,IAAI,CAACH,QAAD,CAAJ,GAAiB,GAAjB;AACAe,QAAAA,QAAQ;AACRF,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAYX,IAAxB;AACD,OANS,EAMP,IANO,CAAV;AAOAa,MAAAA,QAAQ,CAACC,MAAT;AACD;AACF;;AAvBgC;;AAyBnCC,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,WAA7B,EAA0ChB,QAA1C;AAEA,SAASJ,QAAT;AACA,eAAeI,QAAf","sourcesContent":["import * as getNumClicks from \"./OnePlace\";\nimport * as getPlayer from \"./App\";\nimport OnePlace from \"./OnePlace\";\nimport \"./GridGame.css\";\n\nvar numClicked = 0;\nvar initBord = localStorage.getItem(\"bord\");\ninitBord = JSON.parse(initBord);\nconst sizeBord = 9;\n\nvar emptyBord = [];\nfor (let i = 0; i < sizeBord; i++) emptyBord[i] = \" \";\nemptyBord[sizeBord] = \"T\";\n\nconst bord = initBord ?? emptyBord;\n// var typePlayer;\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    let el = ``;\n    let typePlayer = this.getAttribute(\"name\");\n    for (let i = 0; i < sizeBord; i++) {\n      el += `<place-component id=\"placeBtn\" name=${i} typePlayer=${typePlayer} onClickPlace=\"check\"></place-component>`;\n    }\n    this.innerHTML += `<div class=\"body\"> ${el} </div>`;\n\n    if (getNumClicks.numClicked === sizeBord - 1) {\n      setTimeout(() => {\n        console.log(\"hello i an hare!\");\n        numClicked = 0;\n        bord[sizeBord] = \"T\";\n        restBord();\n        console.log(\"board: \" + bord);\n      }, 1000);\n      location.reload();\n    }\n  }\n}\nwindow.customElements.define(\"grid-game\", GridGame);\n\nexport { sizeBord };\nexport default GridGame;\n"]},"metadata":{},"sourceType":"module"}