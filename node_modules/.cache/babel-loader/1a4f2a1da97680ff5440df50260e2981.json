{"ast":null,"code":"import \"./Scores.css\";\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<style>\n.body {\n  font-family: \"Arial\", sans-serif;\n  font-size: large;\n  font-weight: bold;\n  display: grid;\n  grid-template-columns: repeat(3, 200px);\n  grid-template-rows: repeat(2, 30px);\n  column-gap: 5px;\n  row-gap: 5px;\n  color: white;\n}\n</style>\n  <div class=\"body\">\n\n    <p> Player X </p>\n    <p> TIE </p>\n    <p> Player O </p>\n\n    <h3><slot name=\"px\" /></h3>\n    <p><slot name=\"tie\" /></p>\n    <p><slot name=\"po\" /></p>\n\n</div>\n`;\n\nclass Scores extends HTMLElement {\n  constructor() {\n    super(); // this.showInfo = true;\n    // this.attachShadow({ mode: \"open\" });\n    // this.shadowRoot.appendChild(template.content.cloneNode(true));\n    // this.shadowRoot.querySelector(\"h3\").innerText = this.getAttribute(\"value\");\n  } // attributeChangedCallback() {\n  //   this.innerHTML = `<style>\n  //   .body {\n  //     max-width: 600px;\n  //     font-family: \"Arial\", sans-serif;\n  //     font-size: large;\n  //     font-weight: bold;\n  //     display: grid;\n  //     grid-template-columns: repeat(3, 1fr);\n  //     grid-template-rows: repeat(2, 1fr);\n  //     column-gap: 5px;\n  //     row-gap: 5px;\n  //     color: red;\n  //   }\n  //   </style>\n  //     <div class=\"body\">\n  //       <p> Player X </p>\n  //       <p> TIE </p>\n  //       <p> Player O </p>\n  //       <p><slot name=\"px\" /></p>\n  //       <p><slot name=\"tie\" /></p>\n  //       <p><slot name=\"po\" /></p>\n  //   </div>\n  //   `;\n  // }\n\n\n  connectedCallback() {\n    this.innerHTML = `\n  <div class=\"user-scores\">\n        <h3>Player X <h3>\n        <h3>TIE<h3>\n        <h3>Player O <h3>\n        <p></p>\n        <p><slot name=\"tie\" /></p>\n        <p><slot name=\"po\" /></p>\n  </div>\n  `;\n  } // this.showInfo = true;\n  // this.attachShadow({ mode: \"open\" });\n  // this.shadowRoot.appendChild(template.content.cloneNode(true));\n\n\n  toggleInfo() {\n    this.showInfo = !this.showInfo;\n    const info = this.shadowRoot.querySelector(\".user-scores\");\n    const toggeleh3 = this.shadowRoot.querySelector(\"#toggle-info\"); // const toggleBtn = this.shadowRoot.querySelector(\"#toggle-info\");\n\n    if (this.showInfo) {\n      // info.style.display = \"block\";\n      toggeleh3.innerText = \"Play\";\n    } else {\n      // info.style.display = \"none\";\n      toggeleh3.innerText = \"instructions\";\n    }\n  } // connectedCallback() {\n  //   this.shadowRoot\n  //     .querySelector(\"#toggle-info\")\n  //     .addEventListener(\"click\", () => this.toggleInfo());\n  // }\n\n\n  disconnectedCallback() {\n    this.shadowRoot.querySelector(\"#toggle-info\").setAttribute(\"value\");\n  }\n\n}\n\nwindow.customElements.define(\"user-scores\", Scores);\nexport default Scores;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/game/Tic-Tok-Toe/src/Scores.js"],"names":["template","document","createElement","innerHTML","Scores","HTMLElement","constructor","connectedCallback","toggleInfo","showInfo","info","shadowRoot","querySelector","toggeleh3","innerText","disconnectedCallback","setAttribute","window","customElements","define"],"mappings":"AAAA,OAAO,cAAP;AAEA,MAAMA,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;AACAF,QAAQ,CAACG,SAAT,GAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBA;;AA2BA,MAAMC,MAAN,SAAqBC,WAArB,CAAiC;AAC/BC,EAAAA,WAAW,GAAG;AACZ,YADY,CAEZ;AACA;AACA;AACA;AACD,GAP8B,CAS/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AACAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,SAAL,GAAkB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GATI;AAUD,GAhD8B,CAkD/B;AACA;AACA;;;AAEAK,EAAAA,UAAU,GAAG;AACX,SAAKC,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AAEA,UAAMC,IAAI,GAAG,KAAKC,UAAL,CAAgBC,aAAhB,CAA8B,cAA9B,CAAb;AACA,UAAMC,SAAS,GAAG,KAAKF,UAAL,CAAgBC,aAAhB,CAA8B,cAA9B,CAAlB,CAJW,CAMX;;AAEA,QAAI,KAAKH,QAAT,EAAmB;AACjB;AACAI,MAAAA,SAAS,CAACC,SAAV,GAAsB,MAAtB;AACD,KAHD,MAGO;AACL;AACAD,MAAAA,SAAS,CAACC,SAAV,GAAsB,cAAtB;AACD;AACF,GArE8B,CAuE/B;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,oBAAoB,GAAG;AACrB,SAAKJ,UAAL,CAAgBC,aAAhB,CAA8B,cAA9B,EAA8CI,YAA9C,CAA2D,OAA3D;AACD;;AA/E8B;;AAiFjCC,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,aAA7B,EAA4Cf,MAA5C;AAEA,eAAeA,MAAf","sourcesContent":["import \"./Scores.css\";\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<style>\n.body {\n  font-family: \"Arial\", sans-serif;\n  font-size: large;\n  font-weight: bold;\n  display: grid;\n  grid-template-columns: repeat(3, 200px);\n  grid-template-rows: repeat(2, 30px);\n  column-gap: 5px;\n  row-gap: 5px;\n  color: white;\n}\n</style>\n  <div class=\"body\">\n\n    <p> Player X </p>\n    <p> TIE </p>\n    <p> Player O </p>\n\n    <h3><slot name=\"px\" /></h3>\n    <p><slot name=\"tie\" /></p>\n    <p><slot name=\"po\" /></p>\n\n</div>\n`;\n\nclass Scores extends HTMLElement {\n  constructor() {\n    super();\n    // this.showInfo = true;\n    // this.attachShadow({ mode: \"open\" });\n    // this.shadowRoot.appendChild(template.content.cloneNode(true));\n    // this.shadowRoot.querySelector(\"h3\").innerText = this.getAttribute(\"value\");\n  }\n\n  // attributeChangedCallback() {\n  //   this.innerHTML = `<style>\n  //   .body {\n  //     max-width: 600px;\n  //     font-family: \"Arial\", sans-serif;\n  //     font-size: large;\n  //     font-weight: bold;\n  //     display: grid;\n  //     grid-template-columns: repeat(3, 1fr);\n  //     grid-template-rows: repeat(2, 1fr);\n  //     column-gap: 5px;\n  //     row-gap: 5px;\n  //     color: red;\n  //   }\n  //   </style>\n  //     <div class=\"body\">\n\n  //       <p> Player X </p>\n  //       <p> TIE </p>\n  //       <p> Player O </p>\n\n  //       <p><slot name=\"px\" /></p>\n  //       <p><slot name=\"tie\" /></p>\n  //       <p><slot name=\"po\" /></p>\n\n  //   </div>\n  //   `;\n  // }\n  connectedCallback() {\n    this.innerHTML = `\n  <div class=\"user-scores\">\n        <h3>Player X <h3>\n        <h3>TIE<h3>\n        <h3>Player O <h3>\n        <p></p>\n        <p><slot name=\"tie\" /></p>\n        <p><slot name=\"po\" /></p>\n  </div>\n  `;\n  }\n\n  // this.showInfo = true;\n  // this.attachShadow({ mode: \"open\" });\n  // this.shadowRoot.appendChild(template.content.cloneNode(true));\n\n  toggleInfo() {\n    this.showInfo = !this.showInfo;\n\n    const info = this.shadowRoot.querySelector(\".user-scores\");\n    const toggeleh3 = this.shadowRoot.querySelector(\"#toggle-info\");\n\n    // const toggleBtn = this.shadowRoot.querySelector(\"#toggle-info\");\n\n    if (this.showInfo) {\n      // info.style.display = \"block\";\n      toggeleh3.innerText = \"Play\";\n    } else {\n      // info.style.display = \"none\";\n      toggeleh3.innerText = \"instructions\";\n    }\n  }\n\n  // connectedCallback() {\n  //   this.shadowRoot\n  //     .querySelector(\"#toggle-info\")\n  //     .addEventListener(\"click\", () => this.toggleInfo());\n  // }\n\n  disconnectedCallback() {\n    this.shadowRoot.querySelector(\"#toggle-info\").setAttribute(\"value\");\n  }\n}\nwindow.customElements.define(\"user-scores\", Scores);\n\nexport default Scores;\n"]},"metadata":{},"sourceType":"module"}