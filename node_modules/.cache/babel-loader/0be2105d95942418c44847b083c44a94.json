{"ast":null,"code":"import \"./Scores.css\"; // const template = document.createElement(\"template\");\n// template.innerHTML = `\n// <style>\n// .body {\n//   max-width: 600px;\n//   font-family: \"Arial\", sans-serif;\n//   font-size: large;\n//   font-weight: bold;\n//   display: grid;\n//   grid-template-columns: repeat(3, 1fr);\n//   grid-template-rows: repeat(2, 1fr);\n//   column-gap: 5px;\n//   row-gap: 5px;\n//   color: red;\n// }\n// </style>\n//   <div class=\"body\">\n//     <p> Player X </p>\n//     <p> TIE </p>\n//     <p> Player O </p>\n//     <p></p>\n//     <p><slot name=\"tie\" /></p>\n//     <p><slot name=\"po\" /></p>\n// </div>\n// `;\n\nclass Scores extends HTMLElement {// constructor() {\n  //   super();\n  //   this.showInfo = true;\n  //   this.attachShadow({ mode: \"open\" });\n  //   this.shadowRoot.appendChild(template.content.cloneNode(true));\n  //   this.shadowRoot.querySelector(\"p\").innerText = this.getAttribute(\"value\");\n  // }\n  // attributeChangedCallback() {\n  //   this.innerHTML = `<style>\n  //   .body {\n  //     max-width: 600px;\n  //     font-family: \"Arial\", sans-serif;\n  //     font-size: large;\n  //     font-weight: bold;\n  //     display: grid;\n  //     grid-template-columns: repeat(3, 1fr);\n  //     grid-template-rows: repeat(2, 1fr);\n  //     column-gap: 5px;\n  //     row-gap: 5px;\n  //     color: red;\n  //   }\n  //   </style>\n  //     <div class=\"body\">\n  //       <p> Player X </p>\n  //       <p> TIE </p>\n  //       <p> Player O </p>\n  //       <p><slot name=\"px\" /></p>\n  //       <p><slot name=\"tie\" /></p>\n  //       <p><slot name=\"po\" /></p>\n  //   </div>\n  //   `;\n  // }\n  // connectedCallback() {\n  //   this.innerHTML = `\n  // <div class=\"user-scores\">\n  //       <h3>Player X <h3>\n  //       <h3>TIE<h3>\n  //       <h3>Player O <h3>\n  //       <p><slot name=\"px\" /></p>\n  //       <p><slot name=\"tie\" /></p>\n  //       <p><slot name=\"po\" /></p>\n  // </div>\n  // `;\n  // }\n  // this.showInfo = true;\n  // this.attachShadow({ mode: \"open\" });\n  // this.shadowRoot.appendChild(template.content.cloneNode(true));\n  // toggleInfo() {\n  //   this.showInfo = !this.showInfo;\n  //   const info = this.shadowRoot.querySelector(\".user-scores\");\n  //   // const toggleBtn = this.shadowRoot.querySelector(\"#toggle-info\");\n  //   if (this.showInfo) {\n  //     info.style.display = \"block\";\n  //     toggleBtn.innerText = \"Play\";\n  //   } else {\n  //     info.style.display = \"none\";\n  //     toggleBtn.innerText = \"instructions\";\n  //   }\n  // }\n  // connectedCallback() {\n  //   this.shadowRoot\n  //     .querySelector(\"#toggle-info\")\n  //     .addEventListener(\"click\", () => this.toggleInfo());\n  // }\n  // disconnectedCallback() {\n  //   this.shadowRoot.querySelector(\"#toggle-info\").removeEventListener();\n  // }\n}\n\nwindow.customElements.define(\"user-scores\", Scores);\nexport default Scores;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/game/Tic-Tok-Toe/src/Scores.js"],"names":["Scores","HTMLElement","window","customElements","define"],"mappings":"AAAA,OAAO,cAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA,MAAMA,MAAN,SAAqBC,WAArB,CAAiC,CAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnE+B;;AAqEjCC,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,aAA7B,EAA4CJ,MAA5C;AAEA,eAAeA,MAAf","sourcesContent":["import \"./Scores.css\";\n\n// const template = document.createElement(\"template\");\n// template.innerHTML = `\n// <style>\n// .body {\n//   max-width: 600px;\n//   font-family: \"Arial\", sans-serif;\n//   font-size: large;\n//   font-weight: bold;\n//   display: grid;\n//   grid-template-columns: repeat(3, 1fr);\n//   grid-template-rows: repeat(2, 1fr);\n//   column-gap: 5px;\n//   row-gap: 5px;\n//   color: red;\n// }\n// </style>\n//   <div class=\"body\">\n\n//     <p> Player X </p>\n//     <p> TIE </p>\n//     <p> Player O </p>\n\n//     <p></p>\n//     <p><slot name=\"tie\" /></p>\n//     <p><slot name=\"po\" /></p>\n\n// </div>\n// `;\n\nclass Scores extends HTMLElement {\n  // constructor() {\n  //   super();\n  //   this.showInfo = true;\n  //   this.attachShadow({ mode: \"open\" });\n  //   this.shadowRoot.appendChild(template.content.cloneNode(true));\n  //   this.shadowRoot.querySelector(\"p\").innerText = this.getAttribute(\"value\");\n  // }\n  // attributeChangedCallback() {\n  //   this.innerHTML = `<style>\n  //   .body {\n  //     max-width: 600px;\n  //     font-family: \"Arial\", sans-serif;\n  //     font-size: large;\n  //     font-weight: bold;\n  //     display: grid;\n  //     grid-template-columns: repeat(3, 1fr);\n  //     grid-template-rows: repeat(2, 1fr);\n  //     column-gap: 5px;\n  //     row-gap: 5px;\n  //     color: red;\n  //   }\n  //   </style>\n  //     <div class=\"body\">\n  //       <p> Player X </p>\n  //       <p> TIE </p>\n  //       <p> Player O </p>\n  //       <p><slot name=\"px\" /></p>\n  //       <p><slot name=\"tie\" /></p>\n  //       <p><slot name=\"po\" /></p>\n  //   </div>\n  //   `;\n  // }\n  // connectedCallback() {\n  //   this.innerHTML = `\n  // <div class=\"user-scores\">\n  //       <h3>Player X <h3>\n  //       <h3>TIE<h3>\n  //       <h3>Player O <h3>\n  //       <p><slot name=\"px\" /></p>\n  //       <p><slot name=\"tie\" /></p>\n  //       <p><slot name=\"po\" /></p>\n  // </div>\n  // `;\n  // }\n  // this.showInfo = true;\n  // this.attachShadow({ mode: \"open\" });\n  // this.shadowRoot.appendChild(template.content.cloneNode(true));\n  // toggleInfo() {\n  //   this.showInfo = !this.showInfo;\n  //   const info = this.shadowRoot.querySelector(\".user-scores\");\n  //   // const toggleBtn = this.shadowRoot.querySelector(\"#toggle-info\");\n  //   if (this.showInfo) {\n  //     info.style.display = \"block\";\n  //     toggleBtn.innerText = \"Play\";\n  //   } else {\n  //     info.style.display = \"none\";\n  //     toggleBtn.innerText = \"instructions\";\n  //   }\n  // }\n  // connectedCallback() {\n  //   this.shadowRoot\n  //     .querySelector(\"#toggle-info\")\n  //     .addEventListener(\"click\", () => this.toggleInfo());\n  // }\n  // disconnectedCallback() {\n  //   this.shadowRoot.querySelector(\"#toggle-info\").removeEventListener();\n  // }\n}\nwindow.customElements.define(\"user-scores\", Scores);\n\nexport default Scores;\n"]},"metadata":{},"sourceType":"module"}