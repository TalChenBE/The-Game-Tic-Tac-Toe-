{"ast":null,"code":"var _initBord;\n\nimport \"./OnePlace.css\";\nimport * as getPlayer from \"./App\";\nconst template = document.createElement(\"template\"); // template.innerHTML = `\n// <style>\n// .place-body button {\n//     color: white;\n//     font-size: xx-large;\n//     width: 100px;\n//     height: 100px;\n//     background: black;\n//     border: none;\n//     font-weight: bold;\n//   }\n//   .place-button:hover {\n//     background-color: rgba(3, 3, 32, 0.884);\n//     font-style: italic;\n//     color: transparent;\n//     text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n//   }\n//   .place-button:focus {\n//     text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n//   }\n// </style>\n// `;\n\nvar typePlayer;\nvar numClicked = 0;\nvar initBord = localStorage.getItem(\"bord\");\ninitBord = JSON.parse(initBord);\nconst sizeBord = 9;\nvar emptyBord = [];\n\nfor (let i = 0; i < sizeBord; i++) emptyBord[i] = \" \";\n\nemptyBord[sizeBord] = \"T\";\nconst bord = (_initBord = initBord) !== null && _initBord !== void 0 ? _initBord : emptyBord;\nvar index;\n\nclass PlaceWEB extends HTMLElement {\n  constructor() {\n    super();\n    index = parseInt(this.getAttribute(\"name\"), 10);\n    typePlayer = this.getAttribute(\"typePlayer\"); // console.log(\"tp: \" + typePlayer + \",   index: \" + index);\n\n    var p = bord[index];\n    template.innerHTML = ` <button id=\"placeButton\" class=\"place-button\" index=${index}>\n    ${p}\n  </button>`;\n    this.attachShadow({\n      mode: \"open\"\n    });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  placebutton() {\n    console.log(\"index: \" + index + \".  this: \" + this.index);\n\n    if (bord[this.index] === \" \") {\n      console.log(\"get: \" + index);\n      bord[index] = this.getAttribute(\"typePlayer\");\n\n      if (bord[sizeBord] === \"F\") {\n        numClicked = 0;\n        bord[sizeBord] = \"T\";\n      }\n\n      numClicked++;\n    }\n  }\n\n  connectedCallback() {\n    // const button = document.getElementById(\"placeButton\");\n    // button.addEventListener(\"click\", () => {\n    //   button.textContent = `${typePlayer}`;\n    //   console.log(\"tp: \" + typePlayer + \",   index: \" + index);\n    // });\n    // button.onclick=function() {\n    //   index =  parseInt(this.getAttribute('name'),10);\n    //   console.log(\"get: \" +index);\n    //   if (bord[index] === \" \") {\n    //     bord[index] = typePlayer;\n    //     console.log(bord);\n    //       if (bord[sizeBord] === \"F\") {\n    //         numClicked = 0;\n    //         bord[sizeBord] = \"T\";\n    //       }\n    //       numClicked++;\n    //     }\n    // }\n    this.shadowRoot.querySelector(\"#placeButton\").addEventListener(\"click\", () => this.placebutton()); // button.addEventListener(\"click\", () => this.placebutton());\n  }\n\n  disconnectedCallback() {\n    // document.getElementById(\"place-button\").removeEventListener();\n    this.shadowRoot.querySelector(\"#place-button\").removeEventListener();\n  }\n\n}\n\nwindow.customElements.define(\"place-component\", PlaceWEB);\nexport { bord, numClicked, sizeBord };\nexport default PlaceWEB;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/OnePlace.js"],"names":["getPlayer","template","document","createElement","typePlayer","numClicked","initBord","localStorage","getItem","JSON","parse","sizeBord","emptyBord","i","bord","index","PlaceWEB","HTMLElement","constructor","parseInt","getAttribute","p","innerHTML","attachShadow","mode","shadowRoot","appendChild","content","cloneNode","placebutton","console","log","connectedCallback","querySelector","addEventListener","disconnectedCallback","removeEventListener","window","customElements","define"],"mappings":";;AAAA,OAAO,gBAAP;AACA,OAAO,KAAKA,SAAZ,MAA2B,OAA3B;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AACA,IAAIC,UAAJ;AACA,IAAIC,UAAU,GAAG,CAAjB;AACA,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAf;AACAF,QAAQ,GAAGG,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAX;AACA,MAAMK,QAAQ,GAAG,CAAjB;AAEA,IAAIC,SAAS,GAAG,EAAhB;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAApB,EAA8BE,CAAC,EAA/B,EAAmCD,SAAS,CAACC,CAAD,CAAT,GAAe,GAAf;;AACnCD,SAAS,CAACD,QAAD,CAAT,GAAsB,GAAtB;AAEA,MAAMG,IAAI,gBAAGR,QAAH,iDAAeM,SAAzB;AACA,IAAIG,KAAJ;;AAEA,MAAMC,QAAN,SAAuBC,WAAvB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;AACAH,IAAAA,KAAK,GAAGI,QAAQ,CAAC,KAAKC,YAAL,CAAkB,MAAlB,CAAD,EAA4B,EAA5B,CAAhB;AACAhB,IAAAA,UAAU,GAAG,KAAKgB,YAAL,CAAkB,YAAlB,CAAb,CAHY,CAIZ;;AACA,QAAIC,CAAC,GAAGP,IAAI,CAACC,KAAD,CAAZ;AACAd,IAAAA,QAAQ,CAACqB,SAAT,GAAsB,wDAAuDP,KAAM;AACvF,MAAMM,CAAE;AACR,YAFI;AAGA,SAAKE,YAAL,CAAkB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAlB;AACA,SAAKC,UAAL,CAAgBC,WAAhB,CAA4BzB,QAAQ,CAAC0B,OAAT,CAAiBC,SAAjB,CAA2B,IAA3B,CAA5B;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYhB,KAAZ,GAAoB,WAApB,GAAkC,KAAKA,KAAnD;;AACA,QAAID,IAAI,CAAC,KAAKC,KAAN,CAAJ,KAAqB,GAAzB,EAA8B;AAC5Be,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUhB,KAAtB;AAEAD,MAAAA,IAAI,CAACC,KAAD,CAAJ,GAAc,KAAKK,YAAL,CAAkB,YAAlB,CAAd;;AACA,UAAIN,IAAI,CAACH,QAAD,CAAJ,KAAmB,GAAvB,EAA4B;AAC1BN,QAAAA,UAAU,GAAG,CAAb;AACAS,QAAAA,IAAI,CAACH,QAAD,CAAJ,GAAiB,GAAjB;AACD;;AACDN,MAAAA,UAAU;AACX;AACF;;AAED2B,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAKP,UAAL,CACGQ,aADH,CACiB,cADjB,EAEGC,gBAFH,CAEoB,OAFpB,EAE6B,MAAM,KAAKL,WAAL,EAFnC,EAnBkB,CAsBlB;AACD;;AAEDM,EAAAA,oBAAoB,GAAG;AACrB;AACA,SAAKV,UAAL,CAAgBQ,aAAhB,CAA8B,eAA9B,EAA+CG,mBAA/C;AACD;;AAxDgC;;AA0DnCC,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,iBAA7B,EAAgDvB,QAAhD;AAEA,SAASF,IAAT,EAAeT,UAAf,EAA2BM,QAA3B;AACA,eAAeK,QAAf","sourcesContent":["import \"./OnePlace.css\";\nimport * as getPlayer from \"./App\";\n\nconst template = document.createElement(\"template\");\n// template.innerHTML = `\n// <style>\n// .place-body button {\n//     color: white;\n//     font-size: xx-large;\n//     width: 100px;\n//     height: 100px;\n//     background: black;\n//     border: none;\n//     font-weight: bold;\n//   }\n\n//   .place-button:hover {\n//     background-color: rgba(3, 3, 32, 0.884);\n//     font-style: italic;\n//     color: transparent;\n//     text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n//   }\n\n//   .place-button:focus {\n//     text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n//   }\n// </style>\n\n// `;\nvar typePlayer;\nvar numClicked = 0;\nvar initBord = localStorage.getItem(\"bord\");\ninitBord = JSON.parse(initBord);\nconst sizeBord = 9;\n\nvar emptyBord = [];\nfor (let i = 0; i < sizeBord; i++) emptyBord[i] = \" \";\nemptyBord[sizeBord] = \"T\";\n\nconst bord = initBord ?? emptyBord;\nvar index;\n\nclass PlaceWEB extends HTMLElement {\n  constructor() {\n    super();\n    index = parseInt(this.getAttribute(\"name\"), 10);\n    typePlayer = this.getAttribute(\"typePlayer\");\n    // console.log(\"tp: \" + typePlayer + \",   index: \" + index);\n    var p = bord[index];\n    template.innerHTML = ` <button id=\"placeButton\" class=\"place-button\" index=${index}>\n    ${p}\n  </button>`;\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  placebutton() {\n    console.log(\"index: \" + index + \".  this: \" + this.index);\n    if (bord[this.index] === \" \") {\n      console.log(\"get: \" + index);\n\n      bord[index] = this.getAttribute(\"typePlayer\");\n      if (bord[sizeBord] === \"F\") {\n        numClicked = 0;\n        bord[sizeBord] = \"T\";\n      }\n      numClicked++;\n    }\n  }\n\n  connectedCallback() {\n    // const button = document.getElementById(\"placeButton\");\n    // button.addEventListener(\"click\", () => {\n    //   button.textContent = `${typePlayer}`;\n    //   console.log(\"tp: \" + typePlayer + \",   index: \" + index);\n    // });\n    // button.onclick=function() {\n    //   index =  parseInt(this.getAttribute('name'),10);\n    //   console.log(\"get: \" +index);\n    //   if (bord[index] === \" \") {\n    //     bord[index] = typePlayer;\n    //     console.log(bord);\n    //       if (bord[sizeBord] === \"F\") {\n    //         numClicked = 0;\n    //         bord[sizeBord] = \"T\";\n    //       }\n    //       numClicked++;\n    //     }\n    // }\n    this.shadowRoot\n      .querySelector(\"#placeButton\")\n      .addEventListener(\"click\", () => this.placebutton());\n    // button.addEventListener(\"click\", () => this.placebutton());\n  }\n\n  disconnectedCallback() {\n    // document.getElementById(\"place-button\").removeEventListener();\n    this.shadowRoot.querySelector(\"#place-button\").removeEventListener();\n  }\n}\nwindow.customElements.define(\"place-component\", PlaceWEB);\n\nexport { bord, numClicked, sizeBord };\nexport default PlaceWEB;\n"]},"metadata":{},"sourceType":"module"}