{"ast":null,"code":"var _initBord;\n\nimport \"./OnePlace.css\";\nimport * as getPlayer from \"./App\";\nimport * as getSizeBord from \"./GridGame\";\nconst template = document.createElement(\"template\");\nvar typePlayer;\nvar numClicked = 0;\nvar initBord = localStorage.getItem(\"bord\");\ninitBord = JSON.parse(initBord);\nconst sizeBord = getSizeBord.sizeBord;\nvar emptyBord = [];\n\nfor (let i = 0; i < sizeBord; i++) emptyBord[i] = \" \";\n\nemptyBord[sizeBord] = \"T\";\nconst bord = (_initBord = initBord) !== null && _initBord !== void 0 ? _initBord : emptyBord;\nconsole.log(\"size: \" + sizeBord + \", board: \" + bord);\nvar index;\nconst style = `<style>\n.place-button {\n    color: white;\n    font-size: xx-large;\n    width: 100px;\n    height: 100px;\n    background: black;\n    border: none;\n    font-weight: bold;\n  }\n\n  .place-button:hover {\n    background-color: rgba(3, 3, 32, 0.884);\n    font-style: italic;\n    color: transparent;\n    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n  }\n\n  \n</style>`;\n\nfunction setPlayerTypePlace(player) {\n  typePlayer = player; // console.log(\"OnePlace view \" + typePlayer);\n}\n\nclass OnePlace extends HTMLElement {\n  constructor() {\n    super();\n    index = parseInt(this.getAttribute(\"name\"), 10);\n    typePlayer = this.getAttribute(\"typePlayer\");\n    template.innerHTML = style + ` <button id=\"placeButton\" class=\"place-button\" className=\"lala\">\n          ${bord[index]}\n        </button>\n      `;\n    this.attachShadow({\n      mode: \"open\"\n    });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  placebutton() {\n    let index = this.getAttribute(\"name\");\n\n    if (bord[index] === \" \") {\n      // console.log(\"get: \" + index);\n      bord[index] = typePlayer;\n\n      if (bord[sizeBord] === \"F\") {\n        numClicked = 0;\n        bord[sizeBord] = \"T\";\n        console.log(\"board: \" + bord);\n      }\n\n      numClicked++;\n      const btn = this.shadowRoot.getElementById(\"placeButton\");\n      btn.innerText = bord[index];\n    }\n  }\n\n  connectedCallback() {\n    this.shadowRoot.querySelector(\"#placeButton\").addEventListener(\"click\", () => this.placebutton());\n  } // setPlayerType() {\n  //   if (typePlayer === \"X\") {\n  //     typePlayer = \"O\";\n  //   } else {\n  //     typePlayer = \"X\";\n  //   }\n  // }\n\n\n  disconnectedCallback() {\n    this.shadowRoot.querySelector(\"#place-button\").removeEventListener();\n  }\n\n}\n\nwindow.customElements.define(\"place-component\", OnePlace);\nexport { bord, numClicked, sizeBord, setPlayerTypePlace };\nexport default OnePlace;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/OnePlace.js"],"names":["getPlayer","getSizeBord","template","document","createElement","typePlayer","numClicked","initBord","localStorage","getItem","JSON","parse","sizeBord","emptyBord","i","bord","console","log","index","style","setPlayerTypePlace","player","OnePlace","HTMLElement","constructor","parseInt","getAttribute","innerHTML","attachShadow","mode","shadowRoot","appendChild","content","cloneNode","placebutton","btn","getElementById","innerText","connectedCallback","querySelector","addEventListener","disconnectedCallback","removeEventListener","window","customElements","define"],"mappings":"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","sourcesContent":["import \"./OnePlace.css\";\nimport * as getPlayer from \"./App\";\nimport * as getSizeBord from \"./GridGame\";\n\nconst template = document.createElement(\"template\");\n\nvar typePlayer;\nvar numClicked = 0;\nvar initBord = localStorage.getItem(\"bord\");\ninitBord = JSON.parse(initBord);\nconst sizeBord = getSizeBord.sizeBord;\n\nvar emptyBord = [];\nfor (let i = 0; i < sizeBord; i++) emptyBord[i] = \" \";\nemptyBord[sizeBord] = \"T\";\n\nconst bord = initBord ?? emptyBord;\nconsole.log(\"size: \" + sizeBord + \", board: \" + bord);\n\nvar index;\n\nconst style = `<style>\n.place-button {\n    color: white;\n    font-size: xx-large;\n    width: 100px;\n    height: 100px;\n    background: black;\n    border: none;\n    font-weight: bold;\n  }\n\n  .place-button:hover {\n    background-color: rgba(3, 3, 32, 0.884);\n    font-style: italic;\n    color: transparent;\n    text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n  }\n\n  \n</style>`;\n\nfunction setPlayerTypePlace(player) {\n  typePlayer = player;\n  // console.log(\"OnePlace view \" + typePlayer);\n}\n\nclass OnePlace extends HTMLElement {\n  constructor() {\n    super();\n    index = parseInt(this.getAttribute(\"name\"), 10);\n    typePlayer = this.getAttribute(\"typePlayer\");\n\n    template.innerHTML =\n      style +\n      ` <button id=\"placeButton\" class=\"place-button\" className=\"lala\">\n          ${bord[index]}\n        </button>\n      `;\n\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n  placebutton() {\n    let index = this.getAttribute(\"name\");\n    if (bord[index] === \" \") {\n      // console.log(\"get: \" + index);\n      bord[index] = typePlayer;\n      if (bord[sizeBord] === \"F\") {\n        numClicked = 0;\n        bord[sizeBord] = \"T\";\n        console.log(\"board: \" + bord);\n      }\n      numClicked++;\n\n      const btn = this.shadowRoot.getElementById(\"placeButton\");\n      btn.innerText = bord[index];\n    }\n  }\n\n  connectedCallback() {\n    this.shadowRoot\n      .querySelector(\"#placeButton\")\n      .addEventListener(\"click\", () => this.placebutton());\n  }\n  // setPlayerType() {\n  //   if (typePlayer === \"X\") {\n  //     typePlayer = \"O\";\n  //   } else {\n  //     typePlayer = \"X\";\n  //   }\n  // }\n  disconnectedCallback() {\n    this.shadowRoot.querySelector(\"#place-button\").removeEventListener();\n  }\n}\nwindow.customElements.define(\"place-component\", OnePlace);\n\nexport { bord, numClicked, sizeBord, setPlayerTypePlace };\nexport default OnePlace;\n"]},"metadata":{},"sourceType":"module"}