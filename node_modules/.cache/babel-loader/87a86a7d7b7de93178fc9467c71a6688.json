{"ast":null,"code":"var _jsxFileName = \"/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\"; // import Place from \"./components/Place\";\n\nimport * as getBord from \"./OnePlace\";\nimport React from \"react\";\nimport Scores from \"./components/Scores\";\nimport ButtonCom from \"./components/ButtonCom\";\nimport GridGame from \"./GridGame.js\";\nimport OnePlace from \"./OnePlace\";\nimport * as getFunc from \"./OnePlace\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar bord = getBord.bord;\nconst sizeBord = getBord.sizeBord;\nvar numClicked;\nvar typePlayer = \"X\";\n\nfunction App() {\n  _s();\n\n  const [player, setPlayer] = useState(\"X\");\n  const [numsWinX, setNumsWinX] = useState(0);\n  const [numsTie, setNumsTie] = useState(0);\n  const [numsWinO, setNumsWinO] = useState(0); // namePlayer = typePlayer;\n\n  function handleClick() {\n    let flag = true;\n\n    if (typePlayer === \"X\") {\n      typePlayer = \"O\"; // setTypePlayer(\"O\");\n    } else {\n      //  setTypePlayer(\"X\");\n      typePlayer = \"X\";\n    }\n\n    numClicked = getBord.numClicked;\n    var retval = isWin(bord);\n\n    if (retval === \"X\" || retval === \"O\") {\n      resetGame(\"Congratulations \" + retval + \" won!\", retval);\n      if (retval === \"X\") setNumsWinX(numsWinX + 1);else setNumsWinO(numsWinO + 1);\n      flag = false;\n    }\n\n    if (numClicked === sizeBord && flag) {\n      resetGame(\" TIE \", null);\n      setNumsTie(numsTie + 1);\n    }\n  }\n\n  const listener = () => {\n    console.log(\"state in handler: \" + typePlayer);\n    getFunc.setPlayerTypePlace(typePlayer);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"click\", listener);\n  }, [typePlayer]);\n\n  function handleClickRESETgame() {\n    bord = bord.map(() => \" \");\n    bord[sizeBord] = \"T\"; // for (let i = 0; i <sizeBord ; i++) bord[i] = \" \";\n\n    localStorage.setItem(\"bord\", JSON.stringify(bord));\n    localStorage.setItem(\"tie\", \"0\");\n    localStorage.setItem(\"scoreX\", \"0\");\n    localStorage.setItem(\"scoreO\", \"0\");\n    window.location.reload();\n  }\n\n  function handleClickSAVEgame() {\n    localStorage.setItem(\"bord\", JSON.stringify(bord));\n    localStorage.setItem(\"tie\", JSON.stringify(numsTie));\n    localStorage.setItem(\"scoreX\", JSON.stringify(numsWinX));\n    localStorage.setItem(\"scoreO\", JSON.stringify(numsWinO));\n  } // const gridRef = useRef(0);\n  // addEventListener(\"click\", () => handleClickPlace());\n  // function handleClickPlace() {\n  //   console.log(\"click!\");\n  //}\n  // gridRef.addEventListener(\"click\", () => this.handleClickPlace());\n  // if (document.querySelector(\"grid-game\") !== null)\n  //   document.querySelector(\"grid-game\").addEventListener(\"check\", () => {\n  //     console.log(\"123!!\");\n  //   });\n  // useEffect(() => {\n  //   gridRef.current.addEventListener(\"handleEventPlace\", (ev) => {\n  //     console.log(\"APP click!\");\n  //   });\n  // });\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"The Tic Tok Toe game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Turn player: \", typePlayer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bnt\",\n        children: [/*#__PURE__*/_jsxDEV(\"button-component\", {\n          name: \"reset\",\n          onClick: handleClickRESETgame,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            slot: \"compButton\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button-component\", {\n          name: \"save\",\n          onClick: handleClickSAVEgame,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            slot: \"compButton\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bord\",\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(\"grid-game\", {\n        id: \"gridi\",\n        name: typePlayer,\n        className: \"grid-game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"users-scores\", {\n      className: \"userScores\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        slot: \"px\",\n        value: numsWinX,\n        children: numsWinX\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        slot: \"tie\",\n        value: numsTie,\n        children: numsTie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        slot: \"po\",\n        value: numsWinO,\n        children: numsWinO\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"awQyLC25oIvY9QoZz2aCLGqKz/0=\");\n\n_c = App;\n\nfunction isWin(bord1) {\n  var win = true,\n      player;\n  const sqrtSizeBord = Math.sqrt(sizeBord, 2); // console.log(sqrtSizeBord);\n  //check if ther is a win in row\n\n  for (let i = 0; i < sqrtSizeBord; i += 3) {\n    player = bord1[i];\n    win = true;\n\n    for (let j = i; j < sqrtSizeBord; j++) {\n      if (bord1[j] !== player) win = false;\n    }\n\n    if (player !== \" \" && win === true) {\n      return player;\n    }\n  } //check if ther is a win in colomn\n\n\n  for (let i = 0; i < sqrtSizeBord; i++) {\n    player = bord1[i];\n    win = true;\n\n    for (let j = i; j < sizeBord; j += sqrtSizeBord) {\n      if (bord1[j] !== player) win = false;\n    }\n\n    if (player !== \" \" && win === true) {\n      return player;\n    }\n  } //check if ther is a win in the main diagonal\n\n\n  player = bord1[0];\n  win = true;\n\n  for (let i = 0; i < sizeBord; i += sqrtSizeBord + 1) {\n    if (bord1[i] !== player) win = false;\n  }\n\n  if (player !== \" \" && win === true) {\n    return player;\n  } //check if ther is a win in the main diagonal\n\n\n  player = bord1[sqrtSizeBord - 1];\n  win = true;\n\n  for (let i = sqrtSizeBord - 1; i < sizeBord; i += sqrtSizeBord - 1) {\n    if (bord1[i] !== player) win = false;\n  }\n\n  if (player !== \" \" && win === true) {\n    return player;\n  }\n\n  return \"nobady\";\n}\n\nfunction resetGame(msg) {\n  alert(msg);\n  bord = bord.map(() => \" \");\n  bord[sizeBord] = \"T\"; // for (let i = 0; i <sizeBord ; i++) bord[i] = \" \";\n\n  localStorage.setItem(\"bord\", JSON.stringify(bord));\n  bord[sizeBord] = \"F\";\n} // export { namePlayer };\n\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/App.js"],"names":["useState","useEffect","useRef","getBord","React","Scores","ButtonCom","GridGame","OnePlace","getFunc","bord","sizeBord","numClicked","typePlayer","App","player","setPlayer","numsWinX","setNumsWinX","numsTie","setNumsTie","numsWinO","setNumsWinO","handleClick","flag","retval","isWin","resetGame","listener","console","log","setPlayerTypePlace","window","addEventListener","handleClickRESETgame","map","localStorage","setItem","JSON","stringify","location","reload","handleClickSAVEgame","bord1","win","sqrtSizeBord","Math","sqrt","i","j","msg","alert"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\n// import Place from \"./components/Place\";\nimport * as getBord from \"./OnePlace\";\nimport React from \"react\";\nimport Scores from \"./components/Scores\";\nimport ButtonCom from \"./components/ButtonCom\";\nimport GridGame from \"./GridGame.js\";\nimport OnePlace from \"./OnePlace\";\nimport * as getFunc from \"./OnePlace\";\n\nvar bord = getBord.bord;\n\nconst sizeBord = getBord.sizeBord;\nvar numClicked;\n\nvar typePlayer = \"X\";\n\nfunction App() {\n  const [player, setPlayer] = useState(\"X\");\n  const [numsWinX, setNumsWinX] = useState(0);\n  const [numsTie, setNumsTie] = useState(0);\n  const [numsWinO, setNumsWinO] = useState(0);\n\n  // namePlayer = typePlayer;\n  function handleClick() {\n    let flag = true;\n    if (typePlayer === \"X\") {\n      typePlayer = \"O\";\n      // setTypePlayer(\"O\");\n    } else {\n      //  setTypePlayer(\"X\");\n      typePlayer = \"X\";\n    }\n\n    numClicked = getBord.numClicked;\n    var retval = isWin(bord);\n    if (retval === \"X\" || retval === \"O\") {\n      resetGame(\"Congratulations \" + retval + \" won!\", retval);\n      if (retval === \"X\") setNumsWinX(numsWinX + 1);\n      else setNumsWinO(numsWinO + 1);\n      flag = false;\n    }\n    if (numClicked === sizeBord && flag) {\n      resetGame(\" TIE \", null);\n      setNumsTie(numsTie + 1);\n    }\n  }\n\n  const listener = () => {\n    console.log(\"state in handler: \" + typePlayer);\n    getFunc.setPlayerTypePlace(typePlayer);\n  };\n  React.useEffect(() => {\n    window.addEventListener(\"click\", listener);\n  }, [typePlayer]);\n\n  function handleClickRESETgame() {\n    bord = bord.map(() => \" \");\n    bord[sizeBord] = \"T\";\n    // for (let i = 0; i <sizeBord ; i++) bord[i] = \" \";\n    localStorage.setItem(\"bord\", JSON.stringify(bord));\n    localStorage.setItem(\"tie\", \"0\");\n    localStorage.setItem(\"scoreX\", \"0\");\n    localStorage.setItem(\"scoreO\", \"0\");\n    window.location.reload();\n  }\n  function handleClickSAVEgame() {\n    localStorage.setItem(\"bord\", JSON.stringify(bord));\n    localStorage.setItem(\"tie\", JSON.stringify(numsTie));\n    localStorage.setItem(\"scoreX\", JSON.stringify(numsWinX));\n    localStorage.setItem(\"scoreO\", JSON.stringify(numsWinO));\n  }\n  // const gridRef = useRef(0);\n\n  // addEventListener(\"click\", () => handleClickPlace());\n  // function handleClickPlace() {\n  //   console.log(\"click!\");\n  //}\n  // gridRef.addEventListener(\"click\", () => this.handleClickPlace());\n  // if (document.querySelector(\"grid-game\") !== null)\n  //   document.querySelector(\"grid-game\").addEventListener(\"check\", () => {\n  //     console.log(\"123!!\");\n  //   });\n  // useEffect(() => {\n  //   gridRef.current.addEventListener(\"handleEventPlace\", (ev) => {\n  //     console.log(\"APP click!\");\n  //   });\n  // });\n\n  return (\n    <div className=\"App\">\n      <div className=\"heder\">\n        <div>\n          <h1>The Tic Tok Toe game</h1>\n        </div>\n        <h2>Turn player: {typePlayer}</h2>\n        <div className=\"bnt\">\n          <button-component name=\"reset\" onClick={handleClickRESETgame}>\n            <div slot=\"compButton\">Reset</div>\n          </button-component>\n          <button-component name=\"save\" onClick={handleClickSAVEgame}>\n            <div slot=\"compButton\">Save</div>\n          </button-component>\n        </div>\n      </div>\n      <div className=\"bord\" onClick={handleClick}>\n        <grid-game\n          id=\"gridi\"\n          name={typePlayer}\n          className=\"grid-game\"\n        ></grid-game>\n      </div>\n      <div></div>\n\n      <users-scores className=\"userScores\">\n        <div slot=\"px\" value={numsWinX}>\n          {numsWinX}\n        </div>\n        <div slot=\"tie\" value={numsTie}>\n          {numsTie}\n        </div>\n        <div slot=\"po\" value={numsWinO}>\n          {numsWinO}\n        </div>\n      </users-scores>\n    </div>\n  );\n}\n\nfunction isWin(bord1) {\n  var win = true,\n    player;\n\n  const sqrtSizeBord = Math.sqrt(sizeBord, 2);\n  // console.log(sqrtSizeBord);\n  //check if ther is a win in row\n  for (let i = 0; i < sqrtSizeBord; i += 3) {\n    player = bord1[i];\n    win = true;\n    for (let j = i; j < sqrtSizeBord; j++) {\n      if (bord1[j] !== player) win = false;\n    }\n    if (player !== \" \" && win === true) {\n      return player;\n    }\n  }\n  //check if ther is a win in colomn\n  for (let i = 0; i < sqrtSizeBord; i++) {\n    player = bord1[i];\n    win = true;\n    for (let j = i; j < sizeBord; j += sqrtSizeBord) {\n      if (bord1[j] !== player) win = false;\n    }\n    if (player !== \" \" && win === true) {\n      return player;\n    }\n  }\n  //check if ther is a win in the main diagonal\n  player = bord1[0];\n  win = true;\n  for (let i = 0; i < sizeBord; i += sqrtSizeBord + 1) {\n    if (bord1[i] !== player) win = false;\n  }\n  if (player !== \" \" && win === true) {\n    return player;\n  }\n\n  //check if ther is a win in the main diagonal\n  player = bord1[sqrtSizeBord - 1];\n  win = true;\n  for (let i = sqrtSizeBord - 1; i < sizeBord; i += sqrtSizeBord - 1) {\n    if (bord1[i] !== player) win = false;\n  }\n  if (player !== \" \" && win === true) {\n    return player;\n  }\n\n  return \"nobady\";\n}\n\nfunction resetGame(msg) {\n  alert(msg);\n  bord = bord.map(() => \" \");\n  bord[sizeBord] = \"T\";\n  // for (let i = 0; i <sizeBord ; i++) bord[i] = \" \";\n  localStorage.setItem(\"bord\", JSON.stringify(bord));\n  bord[sizeBord] = \"F\";\n}\n\n// export { namePlayer };\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}