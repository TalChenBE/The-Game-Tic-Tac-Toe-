{"ast":null,"code":"import Place from \"./components/Place\";\nimport * as getBord from \"./components/Place\";\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = htmlInner; // const bord = getBord.bord;\n// var gridplaces;\n// var htmlInner;\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n  } // connectedCallback() {\n  //   var typePlayer = \"X\";\n  //   let i = 0;\n  //   gridplaces = bord.map(() => {\n  //     (i, typePlayer) => {\n  //       return <Place name={i} player={typePlayer} />;\n  //     };\n  //     i++;\n  //   });\n  //   this.innerHTML = `${gridplaces}`;\n  // }\n  // set content(val) {\n  //   // this._content = val;\n  //   // // render changes\n  //   // let el = this.shadowRoot.querySelector(\"#content\");\n  //   // el.textContent = JSON.stringify(this._content, 0, 2);\n  //   //   var gridplaces;\n  //   //   for (let i = 0; i < 9; i++) {\n  //   //     gridplaces[i] = <Place name={i} player={typePlayer} />;\n  //   //   }\n  // }\n  // get content() {\n  //   return <div>{gridplaces}</div>;\n  // }\n  // disconnectedCallback() {\n  //   this.shadowRoot.querySelector(\"#grid-bord\").removeEventListener();\n  // }\n\n\n}\n\nwindow.customElements.define(\"grid-game\", GridGame);\nexport default GridGame;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/GridGame.js"],"names":["Place","getBord","template","document","createElement","innerHTML","htmlInner","GridGame","HTMLElement","constructor","window","customElements","define"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;AACAF,QAAQ,CAACG,SAAT,GAAqBC,SAArB,C,CAEA;AACA;AACA;;AAEA,MAAMC,QAAN,SAAuBC,WAAvB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;AACD,GAHgC,CAKjC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAlCiC;;AAoCnCC,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,WAA7B,EAA0CL,QAA1C;AAEA,eAAeA,QAAf","sourcesContent":["import Place from \"./components/Place\";\nimport * as getBord from \"./components/Place\";\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = htmlInner;\n\n// const bord = getBord.bord;\n// var gridplaces;\n// var htmlInner;\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  // connectedCallback() {\n  //   var typePlayer = \"X\";\n  //   let i = 0;\n\n  //   gridplaces = bord.map(() => {\n  //     (i, typePlayer) => {\n  //       return <Place name={i} player={typePlayer} />;\n  //     };\n  //     i++;\n  //   });\n  //   this.innerHTML = `${gridplaces}`;\n  // }\n\n  // set content(val) {\n  //   // this._content = val;\n  //   // // render changes\n  //   // let el = this.shadowRoot.querySelector(\"#content\");\n  //   // el.textContent = JSON.stringify(this._content, 0, 2);\n  //   //   var gridplaces;\n  //   //   for (let i = 0; i < 9; i++) {\n  //   //     gridplaces[i] = <Place name={i} player={typePlayer} />;\n  //   //   }\n  // }\n  // get content() {\n  //   return <div>{gridplaces}</div>;\n  // }\n\n  // disconnectedCallback() {\n  //   this.shadowRoot.querySelector(\"#grid-bord\").removeEventListener();\n  // }\n}\nwindow.customElements.define(\"grid-game\", GridGame);\n\nexport default GridGame;\n"]},"metadata":{},"sourceType":"module"}