{"ast":null,"code":"import Place from \"./components/Place\";\nimport * as getBord from \"./components/Place\"; // const template = document.createElement(\"template\");\n// template.innerHTML = ` `;\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n\n    for (let i = 0; i < 9; i++) {\n      this.innerHTML += `<Place name=${i} player=\"X\" />`; // if (i === 8) template.innerHTML += `</div>`;\n    }\n\n    console.log(template.innerHTML);\n    this.attachShadow({\n      mode: \"open\"\n    });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n\n}\n\nwindow.customElements.define(\"grid-game\", GridGame);\nexport default GridGame;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/GridGame.js"],"names":["Place","getBord","GridGame","HTMLElement","constructor","i","innerHTML","console","log","template","attachShadow","mode","shadowRoot","appendChild","content","cloneNode","window","customElements","define"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB,C,CAEA;AACA;;AAEA,MAAMC,QAAN,SAAuBC,WAAvB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,WAAKC,SAAL,IAAmB,eAAcD,CAAE,gBAAnC,CAD0B,CAE1B;AACD;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACH,SAArB;AAEA,SAAKI,YAAL,CAAkB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAlB;AACA,SAAKC,UAAL,CAAgBC,WAAhB,CAA4BJ,QAAQ,CAACK,OAAT,CAAiBC,SAAjB,CAA2B,IAA3B,CAA5B;AACD;;AAXgC;;AAanCC,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,WAA7B,EAA0ChB,QAA1C;AAEA,eAAeA,QAAf","sourcesContent":["import Place from \"./components/Place\";\nimport * as getBord from \"./components/Place\";\n\n// const template = document.createElement(\"template\");\n// template.innerHTML = ` `;\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n    for (let i = 0; i < 9; i++) {\n      this.innerHTML += `<Place name=${i} player=\"X\" />`;\n      // if (i === 8) template.innerHTML += `</div>`;\n    }\n    console.log(template.innerHTML);\n\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n  }\n}\nwindow.customElements.define(\"grid-game\", GridGame);\n\nexport default GridGame;\n"]},"metadata":{},"sourceType":"module"}