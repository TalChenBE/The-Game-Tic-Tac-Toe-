{"ast":null,"code":"var _jsxFileName = \"/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/GridGame.js\";\nimport Place from \"./components/Place\";\nimport * as getBord from \"./components/Place\"; // const template = document.createElement(\"template\");\n// template.innerHTML = htmlInner;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bord = getBord.bord;\nvar gridplaces;\nvar htmlInner;\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n    var typePlayer = \"X\";\n    let i = 0;\n    gridplaces = bord.map(() => {\n      (i, typePlayer) => {\n        return /*#__PURE__*/_jsxDEV(Place, {\n          name: i,\n          player: typePlayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 16\n        }, void 0);\n      };\n\n      i++;\n    });\n    this.innerHTML = `${gridplaces}`;\n  }\n\n  connectedCallback() {} // set content(val) {\n  //   // this._content = val;\n  //   // // render changes\n  //   // let el = this.shadowRoot.querySelector(\"#content\");\n  //   // el.textContent = JSON.stringify(this._content, 0, 2);\n  //   //   var gridplaces;\n  //   //   for (let i = 0; i < 9; i++) {\n  //   //     gridplaces[i] = <Place name={i} player={typePlayer} />;\n  //   //   }\n  // }\n  // get content() {\n  //   return <div>{gridplaces}</div>;\n  // }\n  // disconnectedCallback() {\n  //   this.shadowRoot.querySelector(\"#grid-bord\").removeEventListener();\n  // }\n\n\n}\n\nwindow.customElements.define(\"grid-game\", GridGame);\nexport default GridGame;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/GridGame.js"],"names":["Place","getBord","bord","gridplaces","htmlInner","GridGame","HTMLElement","constructor","typePlayer","i","map","innerHTML","connectedCallback","window","customElements","define"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB,C,CAEA;AACA;;;AAEA,MAAMC,IAAI,GAAGD,OAAO,CAACC,IAArB;AACA,IAAIC,UAAJ;AACA,IAAIC,SAAJ;;AAEA,MAAMC,QAAN,SAAuBC,WAAvB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;AACA,QAAIC,UAAU,GAAG,GAAjB;AACA,QAAIC,CAAC,GAAG,CAAR;AAEAN,IAAAA,UAAU,GAAGD,IAAI,CAACQ,GAAL,CAAS,MAAM;AAC1B,OAACD,CAAD,EAAID,UAAJ,KAAmB;AACjB,4BAAO,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEC,CAAb;AAAgB,UAAA,MAAM,EAAED;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,OAFD;;AAGAC,MAAAA,CAAC;AACF,KALY,CAAb;AAMA,SAAKE,SAAL,GAAkB,GAAER,UAAW,EAA/B;AACD;;AACDS,EAAAA,iBAAiB,GAAG,CAAE,CAdW,CAgBjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAhCiC;;AAkCnCC,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,WAA7B,EAA0CV,QAA1C;AAEA,eAAeA,QAAf","sourcesContent":["import Place from \"./components/Place\";\nimport * as getBord from \"./components/Place\";\n\n// const template = document.createElement(\"template\");\n// template.innerHTML = htmlInner;\n\nconst bord = getBord.bord;\nvar gridplaces;\nvar htmlInner;\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n    var typePlayer = \"X\";\n    let i = 0;\n\n    gridplaces = bord.map(() => {\n      (i, typePlayer) => {\n        return <Place name={i} player={typePlayer} />;\n      };\n      i++;\n    });\n    this.innerHTML = `${gridplaces}`;\n  }\n  connectedCallback() {}\n\n  // set content(val) {\n  //   // this._content = val;\n  //   // // render changes\n  //   // let el = this.shadowRoot.querySelector(\"#content\");\n  //   // el.textContent = JSON.stringify(this._content, 0, 2);\n  //   //   var gridplaces;\n  //   //   for (let i = 0; i < 9; i++) {\n  //   //     gridplaces[i] = <Place name={i} player={typePlayer} />;\n  //   //   }\n  // }\n  // get content() {\n  //   return <div>{gridplaces}</div>;\n  // }\n\n  // disconnectedCallback() {\n  //   this.shadowRoot.querySelector(\"#grid-bord\").removeEventListener();\n  // }\n}\nwindow.customElements.define(\"grid-game\", GridGame);\n\nexport default GridGame;\n"]},"metadata":{},"sourceType":"module"}