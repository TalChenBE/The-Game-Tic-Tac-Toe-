{"ast":null,"code":"import Place from \"./components/Place\";\nimport * as getBord from \"./components/Place\";\nconst sizeBord = getBord.sizeBord;\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<style>\n .body {\n  margin: auto;\n  width: 310px;\n  height: 310px;\n  display: grid;\n  grid-template-columns: repeat(3, 100px); \n  grid-template-rows: repeat(3, 1fr);\n  column-gap: 5px;\n  row-gap: 5px;\n  align-items: start;\n  background-color: white;\n}\n  }\n</style> `;\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({\n      mode: \"open\"\n    });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n    let el = ``;\n\n    for (let i = 0; i < sizeBord; i++) {\n      el += `<Place name=${i} player=\"X\"></Place>`;\n    }\n\n    template.innerHTML += `<div class=bord> ${el} </div>`;\n  }\n\n}\n\nwindow.customElements.define(\"grid-game\", GridGame);\nexport default GridGame;","map":{"version":3,"sources":["/home/talchen/Desktop/learning/react/The-Game(Tic-Tac-Toe)/src/GridGame.js"],"names":["Place","getBord","sizeBord","template","document","createElement","innerHTML","GridGame","HTMLElement","constructor","attachShadow","mode","shadowRoot","appendChild","content","cloneNode","el","i","window","customElements","define"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;AAEA,MAAMC,QAAQ,GAAGD,OAAO,CAACC,QAAzB;AACA,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;AACAF,QAAQ,CAACG,SAAT,GAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAfA;;AAiBA,MAAMC,QAAN,SAAuBC,WAAvB,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,YAAL,CAAkB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAlB;AACA,SAAKC,UAAL,CAAgBC,WAAhB,CAA4BV,QAAQ,CAACW,OAAT,CAAiBC,SAAjB,CAA2B,IAA3B,CAA5B;AACA,QAAIC,EAAE,GAAI,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,QAApB,EAA8Be,CAAC,EAA/B,EAAmC;AACjCD,MAAAA,EAAE,IAAK,eAAcC,CAAE,sBAAvB;AACD;;AACDd,IAAAA,QAAQ,CAACG,SAAT,IAAuB,oBAAmBU,EAAG,SAA7C;AACD;;AAVgC;;AAYnCE,MAAM,CAACC,cAAP,CAAsBC,MAAtB,CAA6B,WAA7B,EAA0Cb,QAA1C;AAEA,eAAeA,QAAf","sourcesContent":["import Place from \"./components/Place\";\nimport * as getBord from \"./components/Place\";\n\nconst sizeBord = getBord.sizeBord;\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n<style>\n .body {\n  margin: auto;\n  width: 310px;\n  height: 310px;\n  display: grid;\n  grid-template-columns: repeat(3, 100px); \n  grid-template-rows: repeat(3, 1fr);\n  column-gap: 5px;\n  row-gap: 5px;\n  align-items: start;\n  background-color: white;\n}\n  }\n</style> `;\n\nclass GridGame extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n    let el = ``;\n    for (let i = 0; i < sizeBord; i++) {\n      el += `<Place name=${i} player=\"X\"></Place>`;\n    }\n    template.innerHTML += `<div class=bord> ${el} </div>`;\n  }\n}\nwindow.customElements.define(\"grid-game\", GridGame);\n\nexport default GridGame;\n"]},"metadata":{},"sourceType":"module"}